{"version":3,"file":"static/js/139.44083851.chunk.js","mappings":"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","sources":["components/Breadcrumbs.tsx","components/HeaderBreadcrumbs.tsx","components/Label.tsx","components/EmptyContent.tsx","components/table/TableNoData.tsx","components/table/TableMoreMenu.tsx","components/table/TableEmptyRows.tsx","components/table/TableHeadCustom.tsx","components/table/TableSelectedActions.tsx","hooks/useTable.ts","hooks/useTabs.ts","sections/@dashboard/user/list/UserTableRow.tsx","pages/dashboard/UserList.tsx","services/APIGateway.ts"],"sourcesContent":["import { ReactElement } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\n// @mui\nimport {\n  Box,\n  Link,\n  Typography,\n  BreadcrumbsProps,\n  Breadcrumbs as MUIBreadcrumbs,\n} from '@mui/material';\n\n// ----------------------------------------------------------------------\n\ntype TLink = {\n  href?: string;\n  name: string;\n  icon?: ReactElement;\n};\n\nexport interface Props extends BreadcrumbsProps {\n  links: TLink[];\n  activeLast?: boolean;\n}\n\nexport default function Breadcrumbs({ links, activeLast = false, ...other }: Props) {\n  const currentLink = links[links.length - 1].name;\n\n  const listDefault = links.map((link) => <LinkItem key={link.name} link={link} />);\n\n  const listActiveLast = links.map((link) => (\n    <div key={link.name}>\n      {link.name !== currentLink ? (\n        <LinkItem link={link} />\n      ) : (\n        <Typography\n          variant=\"body2\"\n          sx={{\n            maxWidth: 260,\n            overflow: 'hidden',\n            whiteSpace: 'nowrap',\n            color: 'text.disabled',\n            textOverflow: 'ellipsis',\n          }}\n        >\n          {currentLink}\n        </Typography>\n      )}\n    </div>\n  ));\n\n  return (\n    <MUIBreadcrumbs\n      separator={\n        <Box\n          component=\"span\"\n          sx={{ width: 4, height: 4, borderRadius: '50%', bgcolor: 'text.disabled' }}\n        />\n      }\n      {...other}\n    >\n      {activeLast ? listDefault : listActiveLast}\n    </MUIBreadcrumbs>\n  );\n}\n\n// ----------------------------------------------------------------------\n\ntype LinkItemProps = {\n  link: TLink;\n};\n\nfunction LinkItem({ link }: LinkItemProps) {\n  const { href, name, icon } = link;\n  return (\n    <Link\n      key={name}\n      variant=\"body2\"\n      component={RouterLink}\n      to={href || '#'}\n      sx={{\n        lineHeight: 2,\n        display: 'flex',\n        alignItems: 'center',\n        color: 'text.primary',\n        '& > div': { display: 'inherit' },\n      }}\n    >\n      {icon && <Box sx={{ mr: 1, '& svg': { width: 20, height: 20 } }}>{icon}</Box>}\n      {name}\n    </Link>\n  );\n}\n","import { ReactNode } from 'react';\n// @mui\nimport { Box, Typography, Link } from '@mui/material';\n//\nimport Breadcrumbs, { Props as BreadcrumbsProps } from './Breadcrumbs';\n\n// ----------------------------------------------------------------------\n\ninterface Props extends BreadcrumbsProps {\n  action?: ReactNode;\n  heading: string;\n  moreLink?: string | string[];\n}\n\nexport default function HeaderBreadcrumbs({\n  links,\n  action,\n  heading,\n  moreLink = '' || [],\n  sx,\n  ...other\n}: Props) {\n  return (\n    <Box sx={{ mb: 5, ...sx }}>\n      <Box sx={{ display: 'flex', alignItems: 'center' }}>\n        <Box sx={{ flexGrow: 1 }}>\n          <Typography variant=\"h4\" gutterBottom>\n            {heading}\n          </Typography>\n          <Breadcrumbs links={links} {...other} />\n        </Box>\n\n        {action && <Box sx={{ flexShrink: 0 }}>{action}</Box>}\n      </Box>\n\n      <Box sx={{ mt: 2 }}>\n        {typeof moreLink === 'string' ? (\n          <Link href={moreLink} target=\"_blank\" rel=\"noopener\" variant=\"body2\">\n            {moreLink}\n          </Link>\n        ) : (\n          moreLink.map((href) => (\n            <Link\n              noWrap\n              key={href}\n              href={href}\n              variant=\"body2\"\n              target=\"_blank\"\n              rel=\"noopener\"\n              sx={{ display: 'table' }}\n            >\n              {href}\n            </Link>\n          ))\n        )}\n      </Box>\n    </Box>\n  );\n}\n","// @mui\nimport { alpha, Theme, useTheme, styled } from '@mui/material/styles';\nimport { BoxProps, Box } from '@mui/material';\n// theme\nimport { ColorSchema } from '../theme/palette';\n\n// ----------------------------------------------------------------------\n\ntype LabelColor = 'default' | 'primary' | 'secondary' | 'info' | 'success' | 'warning' | 'error';\n\ntype LabelVariant = 'filled' | 'outlined' | 'ghost';\n\nconst RootStyle = styled('span')(\n  ({\n    theme,\n    ownerState,\n  }: {\n    theme: Theme;\n    ownerState: {\n      color: LabelColor;\n      variant: LabelVariant;\n    };\n  }) => {\n    const isLight = theme.palette.mode === 'light';\n    const { color, variant } = ownerState;\n\n    const styleFilled = (color: ColorSchema) => ({\n      color: theme.palette[color].contrastText,\n      backgroundColor: theme.palette[color].main,\n    });\n\n    const styleOutlined = (color: ColorSchema) => ({\n      color: theme.palette[color].main,\n      backgroundColor: 'transparent',\n      border: `1px solid ${theme.palette[color].main}`,\n    });\n\n    const styleGhost = (color: ColorSchema) => ({\n      color: theme.palette[color][isLight ? 'dark' : 'light'],\n      backgroundColor: alpha(theme.palette[color].main, 0.16),\n    });\n\n    return {\n      height: 22,\n      minWidth: 22,\n      lineHeight: 0,\n      borderRadius: 6,\n      cursor: 'default',\n      alignItems: 'center',\n      whiteSpace: 'nowrap',\n      display: 'inline-flex',\n      justifyContent: 'center',\n      padding: theme.spacing(0, 1),\n      color: theme.palette.grey[800],\n      fontSize: theme.typography.pxToRem(12),\n      fontFamily: theme.typography.fontFamily,\n      backgroundColor: theme.palette.grey[300],\n      fontWeight: theme.typography.fontWeightBold,\n\n      ...(color !== 'default'\n        ? {\n            ...(variant === 'filled' && { ...styleFilled(color) }),\n            ...(variant === 'outlined' && { ...styleOutlined(color) }),\n            ...(variant === 'ghost' && { ...styleGhost(color) }),\n          }\n        : {\n            ...(variant === 'outlined' && {\n              backgroundColor: 'transparent',\n              color: theme.palette.text.primary,\n              border: `1px solid ${theme.palette.grey[500_32]}`,\n            }),\n            ...(variant === 'ghost' && {\n              color: isLight ? theme.palette.text.secondary : theme.palette.common.white,\n              backgroundColor: theme.palette.grey[500_16],\n            }),\n          }),\n    };\n  }\n);\n\n// ----------------------------------------------------------------------\n\ninterface Props extends BoxProps {\n  startIcon?: React.ReactElement | null;\n  endIcon?: React.ReactElement | null;\n  color?: LabelColor;\n  variant?: LabelVariant;\n}\n\nexport default function Label({\n  children,\n  color = 'default',\n  variant = 'ghost',\n  startIcon,\n  endIcon,\n  sx,\n}: Props) {\n  const theme = useTheme();\n\n  const style = {\n    width: 16,\n    height: 16,\n    '& svg, img': { width: 1, height: 1, objectFit: 'cover' },\n  };\n\n  return (\n    <RootStyle\n      ownerState={{ color, variant }}\n      sx={{\n        ...(startIcon && { pl: 0.75 }),\n        ...(endIcon && { pr: 0.75 }),\n        ...sx,\n      }}\n      theme={theme}\n    >\n      {startIcon && <Box sx={{ mr: 0.75, ...style }}>{startIcon}</Box>}\n\n      {children}\n\n      {endIcon && <Box sx={{ ml: 0.75, ...style }}>{endIcon}</Box>}\n    </RootStyle>\n  );\n}\n","// @mui\nimport { styled } from '@mui/material/styles';\nimport { Typography, Box, BoxProps } from '@mui/material';\n//\nimport Image from './Image';\n\n// ----------------------------------------------------------------------\n\nconst RootStyle = styled(Box)(({ theme }) => ({\n  height: '100%',\n  display: 'flex',\n  textAlign: 'center',\n  alignItems: 'center',\n  flexDirection: 'column',\n  justifyContent: 'center',\n  padding: theme.spacing(8, 2),\n}));\n\n// ----------------------------------------------------------------------\n\ninterface Props extends BoxProps {\n  title: string;\n  img?: string;\n  description?: string;\n}\n\nexport default function EmptyContent({ title, description, img, ...other }: Props) {\n  return (\n    <RootStyle {...other}>\n      <Image\n        disabledEffect\n        visibleByDefault\n        alt=\"empty content\"\n        src={img || '/assets/illustrations/illustration_empty_content.svg'}\n        sx={{ height: 240, mb: 3 }}\n      />\n\n      <Typography variant=\"h5\" gutterBottom>\n        {title}\n      </Typography>\n\n      {description && (\n        <Typography variant=\"body2\" sx={{ color: 'text.secondary' }}>\n          {description}\n        </Typography>\n      )}\n    </RootStyle>\n  );\n}\n","// @mui\nimport { TableRow, TableCell } from '@mui/material';\n//\nimport EmptyContent from '../EmptyContent';\n\n// ----------------------------------------------------------------------\n\ntype Props = {\n  isNotFound: boolean;\n};\n\nexport default function TableNoData({ isNotFound }: Props) {\n  return (\n    <TableRow>\n      {isNotFound ? (\n        <TableCell colSpan={12}>\n          <EmptyContent\n            title=\"No se encontraron resultados\"\n            sx={{\n              '& span.MuiBox-root': { height: 160 },\n            }}\n          />\n        </TableCell>\n      ) : (\n        <TableCell colSpan={12} sx={{ p: 0 }} />\n      )}\n    </TableRow>\n  );\n}\n","// @mui\nimport { IconButton } from '@mui/material';\n//\nimport Iconify from '../Iconify';\nimport MenuPopover from '../MenuPopover';\n\n// ----------------------------------------------------------------------\n\ntype Props = {\n  actions: React.ReactNode;\n  open?: HTMLElement | null;\n  onClose?: VoidFunction;\n  onOpen?: (event: React.MouseEvent<HTMLElement>) => void;\n};\n\nexport default function TableMoreMenu({ actions, open, onClose, onOpen }: Props) {\n  return (\n    <>\n      <IconButton onClick={onOpen}>\n        <Iconify icon={'eva:more-vertical-fill'} width={20} height={20} />\n      </IconButton>\n\n      <MenuPopover\n        open={Boolean(open)}\n        anchorEl={open}\n        onClose={onClose}\n        anchorOrigin={{ vertical: 'top', horizontal: 'left' }}\n        transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n        arrow=\"right-top\"\n        sx={{\n          mt: -1,\n          width: 260,\n          '& .MuiMenuItem-root': {\n            px: 1,\n            typography: 'body2',\n            borderRadius: 0.75,\n            '& svg': { mr: 2, width: 20, height: 20 },\n          },\n        }}\n      >\n        {actions}\n      </MenuPopover>\n    </>\n  );\n}\n","// @mui\nimport { TableRow, TableCell } from '@mui/material';\n\n// ----------------------------------------------------------------------\n\ntype Props = {\n  height?: number;\n  emptyRows: number;\n};\n\nexport default function TableEmptyRows({ emptyRows, height }: Props) {\n  if (!emptyRows) {\n    return null;\n  }\n\n  return (\n    <TableRow\n      sx={{\n        ...(height && {\n          height: height * emptyRows,\n        }),\n      }}\n    >\n      <TableCell colSpan={9} />\n    </TableRow>\n  );\n}\n","// @mui\nimport { Theme } from '@mui/material/styles';\nimport {\n  Box,\n  SxProps,\n  Checkbox,\n  TableRow,\n  TableCell,\n  TableHead,\n  TableSortLabel,\n} from '@mui/material';\n\n// ----------------------------------------------------------------------\n\nconst visuallyHidden = {\n  border: 0,\n  margin: -1,\n  padding: 0,\n  width: '1px',\n  height: '1px',\n  overflow: 'hidden',\n  position: 'absolute',\n  whiteSpace: 'nowrap',\n  clip: 'rect(0 0 0 0)',\n} as const;\n\n// ----------------------------------------------------------------------\n\ntype Props = {\n  order?: 'asc' | 'desc';\n  orderBy?: string;\n  headLabel: any[];\n  rowCount?: number;\n  numSelected?: number;\n  onSort?: (id: string) => void;\n  onSelectAllRows?: (checked: boolean) => void;\n  sx?: SxProps<Theme>;\n};\n\nexport default function TableHeadCustom({\n  order,\n  orderBy,\n  rowCount = 0,\n  headLabel,\n  numSelected = 0,\n  onSort,\n  onSelectAllRows,\n  sx,\n}: Props) {\n  return (\n    <TableHead sx={sx}>\n      <TableRow>\n        {onSelectAllRows && (\n          <TableCell padding=\"checkbox\">\n            <Checkbox\n              indeterminate={numSelected > 0 && numSelected < rowCount}\n              checked={rowCount > 0 && numSelected === rowCount}\n              onChange={(event: React.ChangeEvent<HTMLInputElement>) =>\n                onSelectAllRows(event.target.checked)\n              }\n            />\n          </TableCell>\n        )}\n\n        {headLabel.map((headCell) => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.align || 'left'}\n            sortDirection={orderBy === headCell.id ? order : false}\n            sx={{ width: headCell.width, minWidth: headCell.minWidth }}\n          >\n            {onSort ? (\n              <TableSortLabel\n                hideSortIcon\n                active={orderBy === headCell.id}\n                direction={orderBy === headCell.id ? order : 'asc'}\n                onClick={() => onSort(headCell.id)}\n                sx={{ textTransform: 'capitalize' }}\n              >\n                {headCell.label}\n\n                {orderBy === headCell.id ? (\n                  <Box sx={{ ...visuallyHidden }}>\n                    {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                  </Box>\n                ) : null}\n              </TableSortLabel>\n            ) : (\n              headCell.label\n            )}\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n","// @mui\nimport { Checkbox, Typography, Stack, StackProps } from '@mui/material';\n\n// ----------------------------------------------------------------------\n\ninterface Props extends StackProps {\n  dense?: boolean;\n  actions?: React.ReactNode;\n  rowCount: number;\n  numSelected: number;\n  onSelectAllRows: (checked: boolean) => void;\n}\n\nexport default function TableSelectedActions({\n  dense,\n  actions,\n  rowCount,\n  numSelected,\n  onSelectAllRows,\n  sx,\n  ...other\n}: Props) {\n  return (\n    <Stack\n      direction=\"row\"\n      alignItems=\"center\"\n      sx={{\n        px: 2,\n        top: 0,\n        left: 8,\n        right: 8,\n        zIndex: 9,\n        height: 58,\n        borderRadius: 1,\n        position: 'absolute',\n        bgcolor: 'primary.lighter',\n        ...(dense && {\n          pl: 1,\n          height: 38,\n        }),\n        ...sx,\n      }}\n      {...other}\n    >\n      <Checkbox\n        indeterminate={numSelected > 0 && numSelected < rowCount}\n        checked={rowCount > 0 && numSelected === rowCount}\n        onChange={(event: React.ChangeEvent<HTMLInputElement>) =>\n          onSelectAllRows(event.target.checked)\n        }\n      />\n\n      <Typography\n        variant=\"subtitle1\"\n        sx={{\n          ml: 2,\n          flexGrow: 1,\n          color: 'primary.main',\n          ...(dense && {\n            ml: 3,\n          }),\n        }}\n      >\n        {numSelected} seleccionado\n      </Typography>\n\n      {actions && actions}\n    </Stack>\n  );\n}\n","import { useState } from 'react';\n\n// ----------------------------------------------------------------------\n\nexport type UseTableProps = {\n  dense: boolean;\n  page: number;\n  setPage: React.Dispatch<React.SetStateAction<number>>;\n  rowsPerPage: number;\n  order: 'asc' | 'desc';\n  orderBy: string;\n  //\n  selected: string[];\n  setSelected: React.Dispatch<React.SetStateAction<string[]>>;\n  onSelectRow: (id: string) => void;\n  onSelectAllRows: (checked: boolean, newSelecteds: string[]) => void;\n  //\n  onSort: (id: string) => void;\n  onChangePage: (event: unknown, newPage: number) => void;\n  onChangeRowsPerPage: (event: React.ChangeEvent<HTMLInputElement>) => void;\n  onChangeDense: (event: React.ChangeEvent<HTMLInputElement>) => void;\n};\n\nexport type Props = {\n  defaultDense?: boolean;\n  defaultOrder?: 'asc' | 'desc';\n  defaultOrderBy?: string;\n  defaultSelected?: number[];\n  defaultRowsPerPage?: number;\n  defaultCurrentPage?: number;\n};\n\nexport default function useTable(props?: Props) {\n  const [dense, setDense] = useState(props?.defaultDense || false);\n\n  const [orderBy, setOrderBy] = useState(props?.defaultOrderBy || 'name');\n\n  const [order, setOrder] = useState<'asc' | 'desc'>(props?.defaultOrder || 'asc');\n\n  const [page, setPage] = useState(props?.defaultCurrentPage || 0);\n\n  const [rowsPerPage, setRowsPerPage] = useState(props?.defaultRowsPerPage || 5);\n\n  const [selected, setSelected] = useState<number[]>(props?.defaultSelected || []);\n\n  const onSort = (id: string) => {\n    const isAsc = orderBy === id && order === 'asc';\n    if (id !== '') {\n      setOrder(isAsc ? 'desc' : 'asc');\n      setOrderBy(id);\n    }\n  };\n\n  const onSelectRow = (id: number) => {\n    const selectedIndex = selected.indexOf(id);\n\n    let newSelected: number[] = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, id);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selected.slice(0, selectedIndex),\n        selected.slice(selectedIndex + 1)\n      );\n    }\n    setSelected(newSelected);\n  };\n\n  const onSelectAllRows = (checked: boolean, newSelecteds: number[]) => {\n    if (checked) {\n      setSelected(newSelecteds);\n      return;\n    }\n    setSelected([]);\n  };\n\n  const onChangePage = (event: unknown, newPage: number) => {\n    setPage(newPage);\n  };\n\n  const onChangeRowsPerPage = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const onChangeDense = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setDense(event.target.checked);\n  };\n\n  return {\n    dense,\n    order,\n    page,\n    setPage,\n    orderBy,\n    rowsPerPage,\n    //\n    selected,\n    setSelected,\n    onSelectRow,\n    onSelectAllRows,\n    //\n    onSort,\n    onChangePage,\n    onChangeDense,\n    onChangeRowsPerPage,\n  };\n}\n\n// ----------------------------------------------------------------------\n\nexport function descendingComparator<T>(a: T, b: T, orderBy: keyof T) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nexport function getComparator<Key extends keyof any>(\n  order: 'asc' | 'desc',\n  orderBy: Key\n): (a: { [key in Key]: number | string }, b: { [key in Key]: number | string }) => number {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nexport function emptyRows(page: number, rowsPerPage: number, arrayLength: number) {\n  return page > 0 ? Math.max(0, (1 + page) * rowsPerPage - arrayLength) : 0;\n}\n","import { useState } from 'react';\n\n// ----------------------------------------------------------------------\n\nexport default function useTabs(defaultValues?: string) {\n  const [currentTab, setCurrentTab] = useState(defaultValues || '');\n\n  return {\n    currentTab,\n    onChangeTab: (event: React.SyntheticEvent<Element, Event>, newValue: string) => {\n      setCurrentTab(newValue);\n    },\n    setCurrentTab,\n  };\n}\n","import { useState } from 'react';\n// @mui\nimport { useTheme } from '@mui/material/styles';\nimport {\n  Avatar,\n  Checkbox,\n  TableRow,\n  TableCell,\n  Typography,\n  MenuItem,\n  Tooltip,\n} from '@mui/material';\n// @types\nimport { CurrentUser, UserManager } from '../../../../@types/user';\n// components\nimport Label from '../../../../components/Label';\nimport Iconify from '../../../../components/Iconify';\nimport { TableMoreMenu } from '../../../../components/table';\n\n// ----------------------------------------------------------------------\n\ntype Props = {\n  row: CurrentUser;\n  selected: boolean;\n  onEditRow: VoidFunction;\n  onSelectRow: VoidFunction;\n  onDeleteRow: VoidFunction;\n  onResetPassword: VoidFunction;\n};\n\nexport default function UserTableRow({\n  row,\n  selected,\n  onEditRow,\n  onSelectRow,\n  onDeleteRow,\n  onResetPassword,\n}: Props) {\n  const theme = useTheme();\n\n  const { name, role, provider, email } = row;\n\n  const [openMenu, setOpenMenuActions] = useState<HTMLElement | null>(null);\n\n  const handleOpenMenu = (event: React.MouseEvent<HTMLElement>) => {\n    setOpenMenuActions(event.currentTarget);\n  };\n\n  const handleCloseMenu = () => {\n    setOpenMenuActions(null);\n  };\n\n  return (\n    <TableRow hover selected={selected}>\n      <TableCell padding=\"checkbox\">\n        <Checkbox checked={selected} onClick={onSelectRow} />\n      </TableCell>\n\n      <TableCell align=\"left\">\n        <Typography variant=\"subtitle2\" noWrap>\n          {name}\n        </Typography>\n      </TableCell>\n\n      <TableCell align=\"left\">{email}</TableCell>\n\n      <TableCell align=\"left\" sx={{ textTransform: 'capitalize' }}>\n        {role && provider ? (\n          role?.name\n        ) : (\n          <Label\n            sx={{\n              textTransform: 'capitalize',\n              backgroundColor: theme.palette.primary.dark,\n            }}\n          >\n            VÍCTIMA\n          </Label>\n        )}\n      </TableCell>\n\n      <Tooltip title={provider && role ? provider?.name : 'VÍCTIMA'} placement=\"top-start\">\n        <TableCell align=\"left\">\n          <Label\n            sx={{\n              textTransform: 'capitalize',\n              backgroundColor: provider && role ? 'transparent' : theme.palette.primary.dark,\n              overflow: 'hidden',\n              textOverflow: 'ellipsis',\n              whiteSpace: 'nowrap',\n              maxWidth: 300,\n              justifyContent: 'flex-start',\n            }}\n          >\n            {provider && role ? provider?.name : 'VÍCTIMA'}\n          </Label>\n        </TableCell>\n      </Tooltip>\n\n      <TableCell align=\"right\">\n        <TableMoreMenu\n          open={openMenu}\n          onOpen={handleOpenMenu}\n          onClose={handleCloseMenu}\n          actions={\n            <>\n              <MenuItem\n                onClick={() => {\n                  onDeleteRow();\n                  handleCloseMenu();\n                }}\n                sx={{ color: 'error.main' }}\n              >\n                <Iconify icon={'eva:trash-2-outline'} />\n                Eliminar\n              </MenuItem>\n              <MenuItem\n                onClick={() => {\n                  onResetPassword();\n                  handleCloseMenu();\n                }}\n                sx={{ color: 'error.main' }}\n              >\n                <Iconify icon={'material-symbols:lock-reset-rounded'} />\n                Resetear Contraseña\n              </MenuItem>\n              <MenuItem\n                onClick={() => {\n                  onEditRow();\n                  handleCloseMenu();\n                }}\n              >\n                <Iconify icon={'eva:edit-fill'} />\n                Editar\n              </MenuItem>\n            </>\n          }\n        />\n      </TableCell>\n    </TableRow>\n  );\n}\n","import { Link as RouterLink, useNavigate } from 'react-router-dom';\n// @mui\nimport {\n  Box,\n  Tab,\n  Tabs,\n  Card,\n  Table,\n  Button,\n  Tooltip,\n  Divider,\n  TableBody,\n  Container,\n  IconButton,\n  TableContainer,\n  TablePagination,\n} from '@mui/material';\n// routes\nimport { PATH_DASHBOARD } from '../../routes/paths';\n// hooks\nimport useTabs from '../../hooks/useTabs';\nimport useSettings from '../../hooks/useSettings';\nimport useTable, { getComparator, emptyRows } from '../../hooks/useTable';\n// @types\nimport { CurrentUser } from '../../@types/user';\n// components\nimport Page from '../../components/Page';\nimport Iconify from '../../components/Iconify';\nimport Scrollbar from '../../components/Scrollbar';\nimport HeaderBreadcrumbs from '../../components/HeaderBreadcrumbs';\nimport {\n  TableNoData,\n  TableEmptyRows,\n  TableHeadCustom,\n  TableSelectedActions,\n} from '../../components/table';\n// sections\nimport { UserTableToolbar, UserTableRow } from '../../sections/@dashboard/user/list';\nimport useSWR from 'swr';\nimport { useSnackbar } from 'notistack';\nimport { editAsync, removeAsync } from 'src/services/APIGateway';\nimport RoleBasedGuard from 'src/guards/RoleBasedGuard';\nimport { ModuleType } from 'src/@types/module';\nimport { useState } from 'react';\nimport useAuth from 'src/hooks/useAuth';\nimport { generateRandomPassword } from 'src/utils/jwt';\n\n// ----------------------------------------------------------------------\n\nconst STATUS_OPTIONS = ['todos', 'activo', 'desactivado'];\n\nconst ROLE_OPTIONS = ['todos', 'admin', 'director', 'agente'];\n\nconst TABLE_HEAD = [\n  { id: 'name', label: 'Nombre', align: 'left' },\n  { id: 'email', label: 'Correo Electrónico', align: 'left' },\n  { id: 'role', label: 'Rol', align: 'left' },\n  { id: 'provider', label: 'Organización', align: 'left' },\n  { id: '' },\n];\n\n// ----------------------------------------------------------------------\n\nexport default function UserList() {\n  const {\n    dense,\n    page,\n    order,\n    orderBy,\n    rowsPerPage,\n    setPage,\n    //\n    selected,\n    setSelected,\n    onSelectRow,\n    onSelectAllRows,\n    //\n    onSort,\n    onChangePage,\n    onChangeRowsPerPage,\n  } = useTable();\n\n  const { themeStretch } = useSettings();\n\n  const navigate = useNavigate();\n  const { user } = useAuth();\n\n  const { data: tableData = [], mutate } = useSWR<CurrentUser[]>(\n    user?.provider?.id === 1\n      ? '/user'\n      : user?.provider\n      ? `/user/provider/${user?.provider?.id}`\n      : null\n  );\n\n  const [filterName, setFilterName] = useState('');\n\n  const [filterRole, setFilterRole] = useState('todos');\n\n  const { currentTab: filterStatus, onChangeTab: onChangeFilterStatus } = useTabs('todos');\n\n  const { enqueueSnackbar } = useSnackbar();\n\n  const handleFilterName = (filterName: string) => {\n    setFilterName(filterName);\n    setPage(0);\n  };\n\n  const handleFilterRole = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setFilterRole(event.target.value);\n  };\n\n  const handleDeleteRow = async (id: number) => {\n    try {\n      await removeAsync(`/user/${id}`);\n      mutate([...tableData.filter((td) => td.id !== id)]);\n      setSelected([]);\n    } catch {\n      enqueueSnackbar('Ocurrió un error, inténtalo de nuevo', {\n        variant: 'error',\n      });\n    }\n  };\n\n  const handleDeleteRows = (selected: number[]) => {\n    setSelected([]);\n  };\n\n  const handleEditRow = (id: number) => {\n    navigate(PATH_DASHBOARD.user.edit(id));\n  };\n\n  const dataFiltered = applySortFilter({\n    tableData,\n    comparator: getComparator(order, orderBy),\n    filterName,\n    filterRole,\n    filterStatus,\n  });\n\n  const denseHeight = dense ? 52 : 72;\n\n  const isNotFound =\n    (!dataFiltered.length && !!filterName) ||\n    (!dataFiltered.length && !!filterRole) ||\n    (!dataFiltered.length && !!filterStatus);\n\n  const handleResetPassword = async (id: number) => {\n    try {\n      const password = generateRandomPassword();\n      await editAsync(`/auth/${id}/password`, { password });\n      navigator.clipboard.writeText(password);\n      enqueueSnackbar('Se ha copiado la contraseña al portapapeles');\n    } catch (error) {\n      enqueueSnackbar('Ocurrió un error, inténtalo de nuevo');\n    }\n  };\n\n  return (\n    <RoleBasedGuard hasContent moduleId={ModuleType.USER}>\n      <Page title=\"Usuarios\">\n        <Container maxWidth={themeStretch ? false : 'lg'}>\n          <HeaderBreadcrumbs\n            heading=\"Lista de Usuarios\"\n            links={[{ name: 'Dashboard', href: PATH_DASHBOARD.root }, { name: 'Usuarios' }]}\n            action={\n              <Button\n                variant=\"contained\"\n                component={RouterLink}\n                to={PATH_DASHBOARD.user.new}\n                startIcon={<Iconify icon={'eva:plus-fill'} />}\n              >\n                Nuevo Usuario\n              </Button>\n            }\n          />\n\n          <Card>\n            {/* <Tabs\n              allowScrollButtonsMobile\n              variant=\"scrollable\"\n              scrollButtons=\"auto\"\n              value={filterStatus}\n              onChange={onChangeFilterStatus}\n              sx={{ px: 2, bgcolor: 'background.neutral' }}\n            >\n              {STATUS_OPTIONS.map((tab) => (\n                <Tab disableRipple key={tab} label={tab} value={tab} />\n              ))}\n            </Tabs> */}\n\n            <Divider />\n\n            {/* <UserTableToolbar\n              filterName={filterName}\n              filterRole={filterRole}\n              onFilterName={handleFilterName}\n              onFilterRole={handleFilterRole}\n              optionsRole={ROLE_OPTIONS}\n            /> */}\n\n            <Scrollbar>\n              <TableContainer sx={{ minWidth: 800, position: 'relative' }}>\n                {selected.length > 0 && (\n                  <TableSelectedActions\n                    dense={dense}\n                    numSelected={selected.length}\n                    rowCount={tableData.length}\n                    onSelectAllRows={(checked) =>\n                      onSelectAllRows(\n                        checked,\n                        tableData.map((row) => row.id)\n                      )\n                    }\n                    actions={\n                      <Tooltip title=\"Delete\">\n                        <IconButton color=\"primary\" onClick={() => handleDeleteRows(selected)}>\n                          <Iconify icon={'eva:trash-2-outline'} />\n                        </IconButton>\n                      </Tooltip>\n                    }\n                  />\n                )}\n\n                <Table size={dense ? 'small' : 'medium'}>\n                  <TableHeadCustom\n                    order={order}\n                    orderBy={orderBy}\n                    headLabel={TABLE_HEAD}\n                    rowCount={tableData.length}\n                    numSelected={selected.length}\n                    onSort={onSort}\n                    onSelectAllRows={(checked) =>\n                      onSelectAllRows(\n                        checked,\n                        tableData.map((row) => row.id)\n                      )\n                    }\n                  />\n\n                  <TableBody>\n                    {dataFiltered\n                      .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                      .map((row) => (\n                        <UserTableRow\n                          key={row.id}\n                          row={row}\n                          selected={selected.includes(row.id)}\n                          onSelectRow={() => onSelectRow(row.id)}\n                          onDeleteRow={() => handleDeleteRow(row.id)}\n                          onEditRow={() => handleEditRow(row.id)}\n                          onResetPassword={() => handleResetPassword(row.id)}\n                        />\n                      ))}\n\n                    <TableEmptyRows\n                      height={denseHeight}\n                      emptyRows={emptyRows(page, rowsPerPage, tableData.length)}\n                    />\n\n                    <TableNoData isNotFound={isNotFound} />\n                  </TableBody>\n                </Table>\n              </TableContainer>\n            </Scrollbar>\n\n            <Box sx={{ position: 'relative' }}>\n              <TablePagination\n                rowsPerPageOptions={[5, 10, 25]}\n                component=\"div\"\n                count={dataFiltered.length}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                onPageChange={onChangePage}\n                onRowsPerPageChange={onChangeRowsPerPage}\n              />\n\n              {/* <FormControlLabel\n              control={<Switch checked={dense} onChange={onChangeDense} />}\n              label=\"Dense\"\n              sx={{ px: 3, py: 1.5, top: 0, position: { md: 'absolute' } }}\n            /> */}\n            </Box>\n          </Card>\n        </Container>\n      </Page>\n    </RoleBasedGuard>\n  );\n}\n\n// ----------------------------------------------------------------------\n\nfunction applySortFilter({\n  tableData,\n  comparator,\n  filterName,\n  filterStatus,\n  filterRole,\n}: {\n  tableData: CurrentUser[];\n  comparator: (a: any, b: any) => number;\n  filterName: string;\n  filterStatus: string;\n  filterRole: string;\n}) {\n  const stabilizedThis = tableData.map((el, index) => [el, index] as const);\n\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n\n  tableData = stabilizedThis.map((el) => el[0]);\n\n  if (filterName) {\n    tableData = tableData.filter(\n      (item: Record<string, any>) =>\n        (item.name ?? '').toLowerCase().indexOf(filterName.toLowerCase()) !== -1\n    );\n  }\n\n  if (filterStatus !== 'todos') {\n    let status = 'banned';\n    if (filterStatus === 'activo') {\n      status = 'active';\n    }\n    tableData = tableData.filter((item) => item.status === status);\n  }\n\n  if (filterRole !== 'todos') {\n    // tableData = tableData.filter((item) => item.roleId === filterRole);\n  }\n\n  return tableData;\n}\n","import axiosInstance from 'src/utils/axios';\n\nexport const getAsync = async <T>(route: string): Promise<T> => {\n  const result = await axiosInstance.get<T>(route);\n  return result.data;\n};\n\nexport const createAsync = async <T, K = T>(route: string, body: T): Promise<K> => {\n  const result = await axiosInstance.post<K>(route, body);\n  return result.data;\n};\n\nexport const editAsync = async <T, K = T>(route: string, body: T): Promise<K> => {\n  const result = await axiosInstance.put<K>(route, body);\n  return result.data;\n};\n\nexport const removeAsync = async <T>(route: string): Promise<T> => {\n  const result = await axiosInstance.delete<T>(route);\n  return result.data;\n};\n"],"names":["Breadcrumbs","links","activeLast","other","currentLink","length","name","listDefault","map","link","LinkItem","listActiveLast","Typography","variant","sx","maxWidth","overflow","whiteSpace","color","textOverflow","separator","Box","component","width","height","borderRadius","bgcolor","href","icon","Link","RouterLink","to","lineHeight","display","alignItems","mr","HeaderBreadcrumbs","action","heading","moreLink","mb","flexGrow","gutterBottom","flexShrink","mt","target","rel","noWrap","RootStyle","styled","theme","ownerState","isLight","palette","mode","minWidth","cursor","justifyContent","padding","spacing","grey","fontSize","typography","pxToRem","fontFamily","backgroundColor","fontWeight","fontWeightBold","contrastText","main","styleFilled","border","styleOutlined","alpha","styleGhost","text","primary","secondary","common","white","Label","children","startIcon","endIcon","useTheme","style","objectFit","pl","pr","ml","textAlign","flexDirection","EmptyContent","title","description","img","Image","disabledEffect","visibleByDefault","alt","src","TableNoData","isNotFound","colSpan","p","TableMoreMenu","actions","open","onClose","onOpen","IconButton","onClick","Iconify","MenuPopover","Boolean","anchorEl","anchorOrigin","vertical","horizontal","transformOrigin","arrow","px","TableEmptyRows","emptyRows","visuallyHidden","margin","position","clip","TableHeadCustom","order","orderBy","rowCount","headLabel","numSelected","onSort","onSelectAllRows","TableHead","Checkbox","indeterminate","checked","onChange","event","headCell","align","sortDirection","id","TableSortLabel","hideSortIcon","active","direction","textTransform","label","TableSelectedActions","dense","top","left","right","zIndex","useTable","props","useState","defaultDense","setDense","defaultOrderBy","setOrderBy","defaultOrder","setOrder","defaultCurrentPage","page","setPage","defaultRowsPerPage","rowsPerPage","setRowsPerPage","defaultSelected","selected","setSelected","onSelectRow","selectedIndex","indexOf","newSelected","concat","slice","newSelecteds","onChangePage","newPage","onChangeDense","onChangeRowsPerPage","parseInt","value","descendingComparator","a","b","getComparator","arrayLength","Math","max","useTabs","defaultValues","currentTab","setCurrentTab","onChangeTab","newValue","UserTableRow","row","onEditRow","onDeleteRow","onResetPassword","role","provider","email","openMenu","setOpenMenuActions","handleCloseMenu","TableRow","hover","TableCell","dark","Tooltip","placement","currentTarget","TABLE_HEAD","UserList","themeStretch","useSettings","navigate","useNavigate","user","useAuth","useSWR","data","tableData","mutate","filterName","filterRole","filterStatus","enqueueSnackbar","useSnackbar","handleDeleteRow","removeAsync","filter","td","dataFiltered","comparator","stabilizedThis","el","index","sort","item","toLowerCase","status","applySortFilter","denseHeight","handleResetPassword","password","generateRandomPassword","editAsync","navigator","clipboard","writeText","RoleBasedGuard","hasContent","moduleId","ModuleType","Page","Container","PATH_DASHBOARD","Button","Card","Divider","Scrollbar","TableContainer","Table","size","TableBody","includes","TablePagination","rowsPerPageOptions","count","onPageChange","onRowsPerPageChange","getAsync","route","axiosInstance","result","createAsync","body"],"sourceRoot":""}