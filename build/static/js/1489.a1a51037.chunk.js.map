{"version":3,"file":"static/js/1489.a1a51037.chunk.js","mappings":"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","sources":["components/InputStyle.tsx","components/SocialsButton.tsx","pages/ComingSoon.tsx","hooks/useCountdown.ts"],"sourcesContent":["// @mui\nimport { styled } from '@mui/material/styles';\nimport { OutlinedInputProps, TextField } from '@mui/material';\n\n// ----------------------------------------------------------------------\n\ninterface Props extends OutlinedInputProps {\n  stretchStart?: number;\n}\n\nconst InputStyle = styled(TextField, {\n  shouldForwardProp: (prop) => prop !== 'stretchStart',\n})<Props>(({ stretchStart, theme }) => ({\n  '& .MuiOutlinedInput-root': {\n    transition: theme.transitions.create(['box-shadow', 'width'], {\n      easing: theme.transitions.easing.easeInOut,\n      duration: theme.transitions.duration.shorter,\n    }),\n    '&.Mui-focused': {\n      boxShadow: theme.customShadows.z12,\n    },\n    ...(stretchStart && {\n      width: stretchStart,\n      '&.Mui-focused': {\n        boxShadow: theme.customShadows.z12,\n        [theme.breakpoints.up('sm')]: {\n          width: stretchStart + 60,\n        },\n      },\n    }),\n  },\n  '& fieldset': {\n    borderWidth: `1px !important`,\n    borderColor: `${theme.palette.grey[500_32]} !important`,\n  },\n}));\n\nexport default InputStyle;\n","// @mui\nimport { alpha } from '@mui/material/styles';\nimport {\n  Link,\n  Stack,\n  Button,\n  Tooltip,\n  IconButton,\n  ButtonProps,\n  IconButtonProps,\n} from '@mui/material';\n//\nimport Iconify from './Iconify';\n\n// ----------------------------------------------------------------------\n\nexport type SocialLinks = {\n  facebook?: string;\n  instagram?: string;\n  linkedin?: string;\n  twitter?: string;\n};\n\ntype IProps = IconButtonProps & ButtonProps;\n\ninterface Props extends IProps {\n  simple?: boolean;\n  initialColor?: boolean;\n  links?: SocialLinks;\n}\n\nexport default function SocialsButton({\n  initialColor = false,\n  simple = true,\n  links = {},\n  sx,\n  ...other\n}: Props) {\n  const SOCIALS = [\n    {\n      name: 'FaceBook',\n      icon: 'eva:facebook-fill',\n      socialColor: '#1877F2',\n      path: links.facebook || '#facebook-link',\n    },\n    {\n      name: 'Instagram',\n      icon: 'ant-design:instagram-filled',\n      socialColor: '#E02D69',\n      path: links.instagram || '#instagram-link',\n    },\n    {\n      name: 'Linkedin',\n      icon: 'eva:linkedin-fill',\n      socialColor: '#007EBB',\n      path: links.linkedin || '#linkedin-link',\n    },\n    {\n      name: 'Twitter',\n      icon: 'eva:twitter-fill',\n      socialColor: '#00AAEC',\n      path: links.twitter || '#twitter-link',\n    },\n  ];\n\n  return (\n    <Stack direction=\"row\" flexWrap=\"wrap\" alignItems=\"center\">\n      {SOCIALS.map((social) => {\n        const { name, icon, path, socialColor } = social;\n        return simple ? (\n          <Link key={name} href={path}>\n            <Tooltip title={name} placement=\"top\">\n              <IconButton\n                color=\"inherit\"\n                sx={{\n                  ...(initialColor && {\n                    color: socialColor,\n                    '&:hover': {\n                      bgcolor: alpha(socialColor, 0.08),\n                    },\n                  }),\n                  ...sx,\n                }}\n                {...other}\n              >\n                <Iconify icon={icon} sx={{ width: 20, height: 20 }} />\n              </IconButton>\n            </Tooltip>\n          </Link>\n        ) : (\n          <Button\n            key={name}\n            href={path}\n            color=\"inherit\"\n            variant=\"outlined\"\n            size=\"small\"\n            startIcon={<Iconify icon={icon} />}\n            sx={{\n              m: 0.5,\n              flexShrink: 0,\n              ...(initialColor && {\n                color: socialColor,\n                borderColor: socialColor,\n                '&:hover': {\n                  borderColor: socialColor,\n                  bgcolor: alpha(socialColor, 0.08),\n                },\n              }),\n              ...sx,\n            }}\n            {...other}\n          >\n            {name}\n          </Button>\n        );\n      })}\n    </Stack>\n  );\n}\n","// @mui\nimport { styled } from '@mui/material/styles';\nimport { Button, Stack, Container, Typography, InputAdornment } from '@mui/material';\n// hooks\nimport useCountdown from '../hooks/useCountdown';\n// components\nimport Page from '../components/Page';\nimport InputStyle from '../components/InputStyle';\nimport SocialsButton from '../components/SocialsButton';\n// assets\nimport { ComingSoonIllustration } from '../assets';\n\n// ----------------------------------------------------------------------\n\nconst ContentStyle = styled('div')(({ theme }) => ({\n  maxWidth: 480,\n  margin: 'auto',\n  minHeight: '100vh',\n  display: 'flex',\n  justifyContent: 'center',\n  flexDirection: 'column',\n  padding: theme.spacing(12, 0),\n}));\n\nconst CountdownStyle = styled('div')({\n  display: 'flex',\n  justifyContent: 'center',\n});\n\nconst SeparatorStyle = styled(Typography)(({ theme }) => ({\n  margin: theme.spacing(0, 1),\n  [theme.breakpoints.up('sm')]: {\n    margin: theme.spacing(0, 2.5),\n  },\n}));\n\n// ----------------------------------------------------------------------\n\nexport default function ComingSoon() {\n  const countdown = useCountdown(new Date('07/07/2024 21:30'));\n\n  return (\n    <Page title=\"Coming Soon\">\n      <Container>\n        <ContentStyle sx={{ textAlign: 'center' }}>\n          <Typography variant=\"h3\" paragraph>\n            Coming Soon!\n          </Typography>\n          <Typography sx={{ color: 'text.secondary' }}>\n            We are currently working hard on this page!\n          </Typography>\n\n          <ComingSoonIllustration sx={{ my: 10, height: 240 }} />\n\n          <CountdownStyle>\n            <div>\n              <Typography variant=\"h2\">{countdown.days}</Typography>\n              <Typography sx={{ color: 'text.secondary' }}>Days</Typography>\n            </div>\n\n            <SeparatorStyle variant=\"h2\">:</SeparatorStyle>\n\n            <div>\n              <Typography variant=\"h2\">{countdown.hours}</Typography>\n              <Typography sx={{ color: 'text.secondary' }}>Hours</Typography>\n            </div>\n\n            <SeparatorStyle variant=\"h2\">:</SeparatorStyle>\n\n            <div>\n              <Typography variant=\"h2\">{countdown.minutes}</Typography>\n              <Typography sx={{ color: 'text.secondary' }}>Minutes</Typography>\n            </div>\n\n            <SeparatorStyle variant=\"h2\">:</SeparatorStyle>\n\n            <div>\n              <Typography variant=\"h2\">{countdown.seconds}</Typography>\n              <Typography sx={{ color: 'text.secondary' }}>Seconds</Typography>\n            </div>\n          </CountdownStyle>\n\n          <InputStyle\n            fullWidth\n            placeholder=\"Enter your email\"\n            InputProps={{\n              endAdornment: (\n                <InputAdornment position=\"end\">\n                  <Button variant=\"contained\" size=\"large\">\n                    Notify Me\n                  </Button>\n                </InputAdornment>\n              ),\n            }}\n            sx={{ my: 5, '& .MuiOutlinedInput-root': { pr: 0.5 } }}\n          />\n\n          <Stack alignItems=\"center\">\n            <SocialsButton size=\"large\" initialColor />\n          </Stack>\n        </ContentStyle>\n      </Container>\n    </Page>\n  );\n}\n","import { useState, useEffect } from 'react';\n\n// ----------------------------------------------------------------------\n\nexport default function useCountdown(date: Date) {\n  const [countdown, setCountdown] = useState({\n    days: '00',\n    hours: '00',\n    minutes: '00',\n    seconds: '00'\n  });\n\n  useEffect(() => {\n    const interval = setInterval(() => setNewTime(), 1000);\n    return () => clearInterval(interval);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const setNewTime = () => {\n    const startTime = date;\n    const endTime = new Date();\n    const distanceToNow = startTime.valueOf() - endTime.valueOf();\n\n    const getDays = Math.floor(distanceToNow / (1000 * 60 * 60 * 24));\n\n    const getHours = `0${Math.floor(\n      (distanceToNow % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)\n    )}`.slice(-2);\n\n    const getMinutes = `0${Math.floor((distanceToNow % (1000 * 60 * 60)) / (1000 * 60))}`.slice(-2);\n\n    const getSeconds = `0${Math.floor((distanceToNow % (1000 * 60)) / 1000)}`.slice(-2);\n\n    setCountdown({\n      days: getDays.toString() || '000',\n      hours: getHours || '000',\n      minutes: getMinutes || '000',\n      seconds: getSeconds || '000'\n    });\n  };\n\n  return countdown;\n}\n\n// Usage\n// const countdown = useCountdown(new Date('07/07/2022 21:30'));\n"],"names":["InputStyle","styled","TextField","shouldForwardProp","prop","stretchStart","theme","transition","transitions","create","easing","easeInOut","duration","shorter","boxShadow","customShadows","z12","width","breakpoints","up","borderWidth","borderColor","palette","grey","SocialsButton","initialColor","simple","links","sx","other","SOCIALS","name","icon","socialColor","path","facebook","instagram","linkedin","twitter","direction","flexWrap","alignItems","map","social","href","title","placement","color","bgcolor","alpha","height","variant","size","startIcon","m","flexShrink","ContentStyle","maxWidth","margin","minHeight","display","justifyContent","flexDirection","padding","spacing","CountdownStyle","SeparatorStyle","Typography","ComingSoon","countdown","date","useState","days","hours","minutes","seconds","setCountdown","useEffect","interval","setInterval","setNewTime","clearInterval","startTime","endTime","Date","distanceToNow","valueOf","getDays","Math","floor","getHours","slice","getMinutes","getSeconds","toString","useCountdown","Page","Container","textAlign","paragraph","my","fullWidth","placeholder","InputProps","endAdornment","InputAdornment","position","Button","pr","Stack"],"sourceRoot":""}