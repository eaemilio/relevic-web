{"version":3,"file":"static/js/3588.41d17a6c.chunk.js","mappings":"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","sources":["@types/case.ts","components/Breadcrumbs.tsx","components/HeaderBreadcrumbs.tsx","components/EmptyContent.tsx","components/table/TableNoData.tsx","components/table/TableMoreMenu.tsx","components/table/TableEmptyRows.tsx","components/table/TableHeadCustom.tsx","components/table/TableSelectedActions.tsx","hooks/useTable.ts","@types/follow-up.ts","sections/@dashboard/follow-up-note/FollowUpNoteTableRow.tsx","pages/dashboard/case/follow-up-note/FollowUpNoteCreate.tsx","pages/dashboard/case/follow-up-note/FollowUpNoteList.tsx","services/APIGateway.ts"],"sourcesContent":["import { AttentionProtocol, AttentionProtocolBody } from './attention-protocol';\nimport { DemographicForm, DemographicFormBody } from './demographic-form';\nimport { FollowUp, FollowUpNote } from './follow-up';\nimport { ServiceProvider } from './provider';\nimport { SurvivorEvaluation, SurvivorEvaluationBody } from './survivor-evaluation';\nimport { UserManager } from './user';\nimport { Victim, VictimBody } from './victim';\n\nexport interface Case {\n  name: string;\n  id: number;\n  description: string;\n}\n\nexport interface Comment {\n  id: number;\n  text: string;\n  user: UserManager;\n  createdAt: string;\n}\n\nexport interface CommentBody {\n  text: string;\n  userId: number;\n  caseId: number;\n}\n\nexport interface CurrentCase {\n  id: number;\n  description: string;\n  victim: Victim;\n  provider: ServiceProvider;\n  userInCharge: UserManager;\n  consent: boolean;\n  demographicForm: DemographicForm;\n  initialSurvivorEvaluation: SurvivorEvaluation;\n  finalSurvivorEvaluation: SurvivorEvaluation;\n  postSurvivorEvaluation: SurvivorEvaluation;\n  attentionProtocol: AttentionProtocol;\n  followUpUserInCharge: UserManager;\n  consentUserInCharge: UserManager;\n  followUpNotes: FollowUpNote[];\n  createdAt: string;\n  comments: Comment[];\n  completed: boolean;\n  inactive: boolean;\n  code: string;\n  followUps: FollowUp[];\n  jurisdiction: string;\n  defendant: string;\n  defendantId: string;\n  proceduralStage: string;\n  legalScore: string;\n  userCode: string;\n}\n\nexport interface NetworkCase {\n  id: number;\n  description: string;\n  victim: Victim;\n  provider: ServiceProvider;\n  userInCharge: UserManager;\n  consent: boolean;\n  demographicForm: DemographicForm;\n  initialSurvivorEvaluation: SurvivorEvaluation;\n  finalSurvivorEvaluation: SurvivorEvaluation;\n  postSurvivorEvaluation: SurvivorEvaluation;\n  attentionProtocol: AttentionProtocol;\n  followUpUserInCharge: UserManager;\n  consentUserInCharge: UserManager;\n  followUpNotes: FollowUpNote[];\n  createdAt: string;\n  comments: Comment[];\n  completed: boolean;\n  inactive: boolean;\n  code: string;\n  followUps: FollowUp[];\n  jurisdiction: string;\n  defendant: string;\n  defendantId: string;\n  proceduralStage: string;\n  legalScore: string;\n  userCode: string;\n}\n\nexport interface NetworkCaseBody {\n  description: string;\n  victim: VictimBody;\n  providerId: number;\n  userInChargeId: number;\n  consent: boolean;\n  demographicForm: DemographicFormBody;\n  initialSurvivorEvaluation: SurvivorEvaluationBody;\n  finalSurvivorEvaluation: SurvivorEvaluationBody;\n  postSurvivorEvaluation: SurvivorEvaluationBody;\n  attentionProtocol: AttentionProtocolBody;\n  followUpUserInChargeId: number;\n  consentUserInChargeId: number;\n  completed: boolean;\n  code: string;\n  jurisdiction: string;\n  defendant: string;\n  defendantId: string;\n  proceduralStage: string;\n  legalScore: string;\n  userCode: string;\n}\n\nexport const CASE_BASE_URL = '/case';\nexport const COMMENT_BASE_URL = '/comment';\n\nexport const CASE_STATUS = ['Activos', 'Inactivos', 'Cerrados', 'Todos'];\n","import { ReactElement } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\n// @mui\nimport {\n  Box,\n  Link,\n  Typography,\n  BreadcrumbsProps,\n  Breadcrumbs as MUIBreadcrumbs,\n} from '@mui/material';\n\n// ----------------------------------------------------------------------\n\ntype TLink = {\n  href?: string;\n  name: string;\n  icon?: ReactElement;\n};\n\nexport interface Props extends BreadcrumbsProps {\n  links: TLink[];\n  activeLast?: boolean;\n}\n\nexport default function Breadcrumbs({ links, activeLast = false, ...other }: Props) {\n  const currentLink = links[links.length - 1].name;\n\n  const listDefault = links.map((link) => <LinkItem key={link.name} link={link} />);\n\n  const listActiveLast = links.map((link) => (\n    <div key={link.name}>\n      {link.name !== currentLink ? (\n        <LinkItem link={link} />\n      ) : (\n        <Typography\n          variant=\"body2\"\n          sx={{\n            maxWidth: 260,\n            overflow: 'hidden',\n            whiteSpace: 'nowrap',\n            color: 'text.disabled',\n            textOverflow: 'ellipsis',\n          }}\n        >\n          {currentLink}\n        </Typography>\n      )}\n    </div>\n  ));\n\n  return (\n    <MUIBreadcrumbs\n      separator={\n        <Box\n          component=\"span\"\n          sx={{ width: 4, height: 4, borderRadius: '50%', bgcolor: 'text.disabled' }}\n        />\n      }\n      {...other}\n    >\n      {activeLast ? listDefault : listActiveLast}\n    </MUIBreadcrumbs>\n  );\n}\n\n// ----------------------------------------------------------------------\n\ntype LinkItemProps = {\n  link: TLink;\n};\n\nfunction LinkItem({ link }: LinkItemProps) {\n  const { href, name, icon } = link;\n  return (\n    <Link\n      key={name}\n      variant=\"body2\"\n      component={RouterLink}\n      to={href || '#'}\n      sx={{\n        lineHeight: 2,\n        display: 'flex',\n        alignItems: 'center',\n        color: 'text.primary',\n        '& > div': { display: 'inherit' },\n      }}\n    >\n      {icon && <Box sx={{ mr: 1, '& svg': { width: 20, height: 20 } }}>{icon}</Box>}\n      {name}\n    </Link>\n  );\n}\n","import { ReactNode } from 'react';\n// @mui\nimport { Box, Typography, Link } from '@mui/material';\n//\nimport Breadcrumbs, { Props as BreadcrumbsProps } from './Breadcrumbs';\n\n// ----------------------------------------------------------------------\n\ninterface Props extends BreadcrumbsProps {\n  action?: ReactNode;\n  heading: string;\n  moreLink?: string | string[];\n}\n\nexport default function HeaderBreadcrumbs({\n  links,\n  action,\n  heading,\n  moreLink = '' || [],\n  sx,\n  ...other\n}: Props) {\n  return (\n    <Box sx={{ mb: 5, ...sx }}>\n      <Box sx={{ display: 'flex', alignItems: 'center' }}>\n        <Box sx={{ flexGrow: 1 }}>\n          <Typography variant=\"h4\" gutterBottom>\n            {heading}\n          </Typography>\n          <Breadcrumbs links={links} {...other} />\n        </Box>\n\n        {action && <Box sx={{ flexShrink: 0 }}>{action}</Box>}\n      </Box>\n\n      <Box sx={{ mt: 2 }}>\n        {typeof moreLink === 'string' ? (\n          <Link href={moreLink} target=\"_blank\" rel=\"noopener\" variant=\"body2\">\n            {moreLink}\n          </Link>\n        ) : (\n          moreLink.map((href) => (\n            <Link\n              noWrap\n              key={href}\n              href={href}\n              variant=\"body2\"\n              target=\"_blank\"\n              rel=\"noopener\"\n              sx={{ display: 'table' }}\n            >\n              {href}\n            </Link>\n          ))\n        )}\n      </Box>\n    </Box>\n  );\n}\n","// @mui\nimport { styled } from '@mui/material/styles';\nimport { Typography, Box, BoxProps } from '@mui/material';\n//\nimport Image from './Image';\n\n// ----------------------------------------------------------------------\n\nconst RootStyle = styled(Box)(({ theme }) => ({\n  height: '100%',\n  display: 'flex',\n  textAlign: 'center',\n  alignItems: 'center',\n  flexDirection: 'column',\n  justifyContent: 'center',\n  padding: theme.spacing(8, 2),\n}));\n\n// ----------------------------------------------------------------------\n\ninterface Props extends BoxProps {\n  title: string;\n  img?: string;\n  description?: string;\n}\n\nexport default function EmptyContent({ title, description, img, ...other }: Props) {\n  return (\n    <RootStyle {...other}>\n      <Image\n        disabledEffect\n        visibleByDefault\n        alt=\"empty content\"\n        src={img || '/assets/illustrations/illustration_empty_content.svg'}\n        sx={{ height: 240, mb: 3 }}\n      />\n\n      <Typography variant=\"h5\" gutterBottom>\n        {title}\n      </Typography>\n\n      {description && (\n        <Typography variant=\"body2\" sx={{ color: 'text.secondary' }}>\n          {description}\n        </Typography>\n      )}\n    </RootStyle>\n  );\n}\n","// @mui\nimport { TableRow, TableCell } from '@mui/material';\n//\nimport EmptyContent from '../EmptyContent';\n\n// ----------------------------------------------------------------------\n\ntype Props = {\n  isNotFound: boolean;\n};\n\nexport default function TableNoData({ isNotFound }: Props) {\n  return (\n    <TableRow>\n      {isNotFound ? (\n        <TableCell colSpan={12}>\n          <EmptyContent\n            title=\"No se encontraron resultados\"\n            sx={{\n              '& span.MuiBox-root': { height: 160 },\n            }}\n          />\n        </TableCell>\n      ) : (\n        <TableCell colSpan={12} sx={{ p: 0 }} />\n      )}\n    </TableRow>\n  );\n}\n","// @mui\nimport { IconButton } from '@mui/material';\n//\nimport Iconify from '../Iconify';\nimport MenuPopover from '../MenuPopover';\n\n// ----------------------------------------------------------------------\n\ntype Props = {\n  actions: React.ReactNode;\n  open?: HTMLElement | null;\n  onClose?: VoidFunction;\n  onOpen?: (event: React.MouseEvent<HTMLElement>) => void;\n};\n\nexport default function TableMoreMenu({ actions, open, onClose, onOpen }: Props) {\n  return (\n    <>\n      <IconButton onClick={onOpen}>\n        <Iconify icon={'eva:more-vertical-fill'} width={20} height={20} />\n      </IconButton>\n\n      <MenuPopover\n        open={Boolean(open)}\n        anchorEl={open}\n        onClose={onClose}\n        anchorOrigin={{ vertical: 'top', horizontal: 'left' }}\n        transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n        arrow=\"right-top\"\n        sx={{\n          mt: -1,\n          width: 260,\n          '& .MuiMenuItem-root': {\n            px: 1,\n            typography: 'body2',\n            borderRadius: 0.75,\n            '& svg': { mr: 2, width: 20, height: 20 },\n          },\n        }}\n      >\n        {actions}\n      </MenuPopover>\n    </>\n  );\n}\n","// @mui\nimport { TableRow, TableCell } from '@mui/material';\n\n// ----------------------------------------------------------------------\n\ntype Props = {\n  height?: number;\n  emptyRows: number;\n};\n\nexport default function TableEmptyRows({ emptyRows, height }: Props) {\n  if (!emptyRows) {\n    return null;\n  }\n\n  return (\n    <TableRow\n      sx={{\n        ...(height && {\n          height: height * emptyRows,\n        }),\n      }}\n    >\n      <TableCell colSpan={9} />\n    </TableRow>\n  );\n}\n","// @mui\nimport { Theme } from '@mui/material/styles';\nimport {\n  Box,\n  SxProps,\n  Checkbox,\n  TableRow,\n  TableCell,\n  TableHead,\n  TableSortLabel,\n} from '@mui/material';\n\n// ----------------------------------------------------------------------\n\nconst visuallyHidden = {\n  border: 0,\n  margin: -1,\n  padding: 0,\n  width: '1px',\n  height: '1px',\n  overflow: 'hidden',\n  position: 'absolute',\n  whiteSpace: 'nowrap',\n  clip: 'rect(0 0 0 0)',\n} as const;\n\n// ----------------------------------------------------------------------\n\ntype Props = {\n  order?: 'asc' | 'desc';\n  orderBy?: string;\n  headLabel: any[];\n  rowCount?: number;\n  numSelected?: number;\n  onSort?: (id: string) => void;\n  onSelectAllRows?: (checked: boolean) => void;\n  sx?: SxProps<Theme>;\n};\n\nexport default function TableHeadCustom({\n  order,\n  orderBy,\n  rowCount = 0,\n  headLabel,\n  numSelected = 0,\n  onSort,\n  onSelectAllRows,\n  sx,\n}: Props) {\n  return (\n    <TableHead sx={sx}>\n      <TableRow>\n        {onSelectAllRows && (\n          <TableCell padding=\"checkbox\">\n            <Checkbox\n              indeterminate={numSelected > 0 && numSelected < rowCount}\n              checked={rowCount > 0 && numSelected === rowCount}\n              onChange={(event: React.ChangeEvent<HTMLInputElement>) =>\n                onSelectAllRows(event.target.checked)\n              }\n            />\n          </TableCell>\n        )}\n\n        {headLabel.map((headCell) => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.align || 'left'}\n            sortDirection={orderBy === headCell.id ? order : false}\n            sx={{ width: headCell.width, minWidth: headCell.minWidth }}\n          >\n            {onSort ? (\n              <TableSortLabel\n                hideSortIcon\n                active={orderBy === headCell.id}\n                direction={orderBy === headCell.id ? order : 'asc'}\n                onClick={() => onSort(headCell.id)}\n                sx={{ textTransform: 'capitalize' }}\n              >\n                {headCell.label}\n\n                {orderBy === headCell.id ? (\n                  <Box sx={{ ...visuallyHidden }}>\n                    {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                  </Box>\n                ) : null}\n              </TableSortLabel>\n            ) : (\n              headCell.label\n            )}\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n","// @mui\nimport { Checkbox, Typography, Stack, StackProps } from '@mui/material';\n\n// ----------------------------------------------------------------------\n\ninterface Props extends StackProps {\n  dense?: boolean;\n  actions?: React.ReactNode;\n  rowCount: number;\n  numSelected: number;\n  onSelectAllRows: (checked: boolean) => void;\n}\n\nexport default function TableSelectedActions({\n  dense,\n  actions,\n  rowCount,\n  numSelected,\n  onSelectAllRows,\n  sx,\n  ...other\n}: Props) {\n  return (\n    <Stack\n      direction=\"row\"\n      alignItems=\"center\"\n      sx={{\n        px: 2,\n        top: 0,\n        left: 8,\n        right: 8,\n        zIndex: 9,\n        height: 58,\n        borderRadius: 1,\n        position: 'absolute',\n        bgcolor: 'primary.lighter',\n        ...(dense && {\n          pl: 1,\n          height: 38,\n        }),\n        ...sx,\n      }}\n      {...other}\n    >\n      <Checkbox\n        indeterminate={numSelected > 0 && numSelected < rowCount}\n        checked={rowCount > 0 && numSelected === rowCount}\n        onChange={(event: React.ChangeEvent<HTMLInputElement>) =>\n          onSelectAllRows(event.target.checked)\n        }\n      />\n\n      <Typography\n        variant=\"subtitle1\"\n        sx={{\n          ml: 2,\n          flexGrow: 1,\n          color: 'primary.main',\n          ...(dense && {\n            ml: 3,\n          }),\n        }}\n      >\n        {numSelected} seleccionado\n      </Typography>\n\n      {actions && actions}\n    </Stack>\n  );\n}\n","import { useState } from 'react';\n\n// ----------------------------------------------------------------------\n\nexport type UseTableProps = {\n  dense: boolean;\n  page: number;\n  setPage: React.Dispatch<React.SetStateAction<number>>;\n  rowsPerPage: number;\n  order: 'asc' | 'desc';\n  orderBy: string;\n  //\n  selected: string[];\n  setSelected: React.Dispatch<React.SetStateAction<string[]>>;\n  onSelectRow: (id: string) => void;\n  onSelectAllRows: (checked: boolean, newSelecteds: string[]) => void;\n  //\n  onSort: (id: string) => void;\n  onChangePage: (event: unknown, newPage: number) => void;\n  onChangeRowsPerPage: (event: React.ChangeEvent<HTMLInputElement>) => void;\n  onChangeDense: (event: React.ChangeEvent<HTMLInputElement>) => void;\n};\n\nexport type Props = {\n  defaultDense?: boolean;\n  defaultOrder?: 'asc' | 'desc';\n  defaultOrderBy?: string;\n  defaultSelected?: number[];\n  defaultRowsPerPage?: number;\n  defaultCurrentPage?: number;\n};\n\nexport default function useTable(props?: Props) {\n  const [dense, setDense] = useState(props?.defaultDense || false);\n\n  const [orderBy, setOrderBy] = useState(props?.defaultOrderBy || 'name');\n\n  const [order, setOrder] = useState<'asc' | 'desc'>(props?.defaultOrder || 'asc');\n\n  const [page, setPage] = useState(props?.defaultCurrentPage || 0);\n\n  const [rowsPerPage, setRowsPerPage] = useState(props?.defaultRowsPerPage || 5);\n\n  const [selected, setSelected] = useState<number[]>(props?.defaultSelected || []);\n\n  const onSort = (id: string) => {\n    const isAsc = orderBy === id && order === 'asc';\n    if (id !== '') {\n      setOrder(isAsc ? 'desc' : 'asc');\n      setOrderBy(id);\n    }\n  };\n\n  const onSelectRow = (id: number) => {\n    const selectedIndex = selected.indexOf(id);\n\n    let newSelected: number[] = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, id);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selected.slice(0, selectedIndex),\n        selected.slice(selectedIndex + 1)\n      );\n    }\n    setSelected(newSelected);\n  };\n\n  const onSelectAllRows = (checked: boolean, newSelecteds: number[]) => {\n    if (checked) {\n      setSelected(newSelecteds);\n      return;\n    }\n    setSelected([]);\n  };\n\n  const onChangePage = (event: unknown, newPage: number) => {\n    setPage(newPage);\n  };\n\n  const onChangeRowsPerPage = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const onChangeDense = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setDense(event.target.checked);\n  };\n\n  return {\n    dense,\n    order,\n    page,\n    setPage,\n    orderBy,\n    rowsPerPage,\n    //\n    selected,\n    setSelected,\n    onSelectRow,\n    onSelectAllRows,\n    //\n    onSort,\n    onChangePage,\n    onChangeDense,\n    onChangeRowsPerPage,\n  };\n}\n\n// ----------------------------------------------------------------------\n\nexport function descendingComparator<T>(a: T, b: T, orderBy: keyof T) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nexport function getComparator<Key extends keyof any>(\n  order: 'asc' | 'desc',\n  orderBy: Key\n): (a: { [key in Key]: number | string }, b: { [key in Key]: number | string }) => number {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nexport function emptyRows(page: number, rowsPerPage: number, arrayLength: number) {\n  return page > 0 ? Math.max(0, (1 + page) * rowsPerPage - arrayLength) : 0;\n}\n","import { CurrentUser } from './user';\n\nexport interface FollowUp {\n  id: number;\n  date: string;\n  decisions: string;\n  lawyer: string;\n  tribunal: string;\n  nextAudienceDate?: string;\n  canceled: boolean;\n  cancelledReason?: string;\n  createdAt?: Date;\n  caseId: number;\n}\n\nexport type FollowUpBody = Omit<FollowUp, 'id'>;\nexport interface FollowUpNote {\n  id: number;\n  caseId: number;\n  description: string;\n  victimThoughts: string;\n  observations: string;\n  topics: string;\n  comprehension: string;\n  needs: string;\n  survivorPlan: string;\n  evaluatorPlan: string;\n  userInCharge: CurrentUser | null;\n  createdAt: string;\n  dueDate: string;\n  completed: boolean;\n}\n\nexport interface FollowUpNoteBody {\n  caseId: number;\n  description: string;\n  victimThoughts: string;\n  observations: string;\n  topics: string;\n  comprehension: string;\n  needs: string;\n  survivorPlan: string;\n  evaluatorPlan: string;\n  userInChargeId: number;\n  dueDate: string;\n  completed: boolean;\n}\n\nexport const FOLLOW_UP_BASE_URL = '/follow-up-note';\n","import { Checkbox, MenuItem, TableCell, TableRow } from '@mui/material';\nimport dayjs from 'dayjs';\nimport { useState } from 'react';\nimport { FollowUpNote } from 'src/@types/follow-up';\nimport Iconify from 'src/components/Iconify';\nimport { TableMoreMenu } from 'src/components/table';\nimport calendar from 'dayjs/plugin/calendar';\n\ndayjs.extend(calendar);\n\ntype Props = {\n  row: FollowUpNote;\n  selected: boolean;\n  onEditRow: VoidFunction;\n  onSelectRow: VoidFunction;\n  onDeleteRow: VoidFunction;\n};\n\nexport default function FollowUpNoteTableRow({\n  row,\n  selected,\n  onEditRow,\n  onSelectRow,\n  onDeleteRow,\n}: Props) {\n  const { id, description, dueDate } = row;\n\n  const [openMenu, setOpenMenuActions] = useState<HTMLElement | null>(null);\n\n  const handleOpenMenu = (event: React.MouseEvent<HTMLElement>) => {\n    setOpenMenuActions(event.currentTarget);\n  };\n\n  const handleCloseMenu = () => {\n    setOpenMenuActions(null);\n  };\n\n  return (\n    <TableRow hover selected={selected}>\n      <TableCell padding=\"checkbox\">\n        <Checkbox checked={selected} onClick={onSelectRow} />\n      </TableCell>\n\n      <TableCell align=\"left\" sx={{ textTransform: 'capitalize' }}>\n        {id}\n      </TableCell>\n\n      <TableCell align=\"left\">{description}</TableCell>\n\n      <TableCell align=\"left\" sx={{ textTransform: 'capitalize' }}>\n        {dayjs(dueDate).calendar(dayjs(), {\n          sameDay: '[Hoy a las] h:mm A', // The same day ( Today at 2:30 AM )\n          nextDay: '[Mañana a las] h:mm A',\n          nextWednesday: '[Próximo Miércoles a las] h:mm A',\n          sameElse: 'DD/MM/YYYY h:mm A',\n        })}\n      </TableCell>\n\n      <TableCell align=\"right\">\n        <TableMoreMenu\n          open={openMenu}\n          onOpen={handleOpenMenu}\n          onClose={handleCloseMenu}\n          actions={\n            <>\n              <MenuItem\n                onClick={() => {\n                  onDeleteRow();\n                  handleCloseMenu();\n                }}\n                sx={{ color: 'error.main' }}\n              >\n                <Iconify icon={'eva:trash-2-outline'} />\n                Eliminar\n              </MenuItem>\n              <MenuItem\n                onClick={() => {\n                  onEditRow();\n                  handleCloseMenu();\n                }}\n              >\n                <Iconify icon={'eva:edit-fill'} />\n                Editar\n              </MenuItem>\n            </>\n          }\n        />\n      </TableCell>\n    </TableRow>\n  );\n}\n","import { yupResolver } from '@hookform/resolvers/yup';\nimport { LoadingButton } from '@mui/lab';\nimport {\n  Box,\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  TextField,\n  Typography,\n} from '@mui/material';\nimport { useSnackbar } from 'notistack';\nimport { useEffect, useMemo } from 'react';\nimport { FormProvider, useForm } from 'react-hook-form';\nimport { CASE_BASE_URL, NetworkCase } from 'src/@types/case';\nimport { FollowUpNote, FollowUpNoteBody, FOLLOW_UP_BASE_URL } from 'src/@types/follow-up';\nimport { RHFCheckbox, RHFTextField } from 'src/components/hook-form';\nimport { createAsync, editAsync } from 'src/services/APIGateway';\nimport { useSWRConfig } from 'swr';\nimport * as Yup from 'yup';\nimport dayjs from 'dayjs';\n\nimport { AdapterDayjs } from '@mui/x-date-pickers/AdapterDayjs';\nimport { DateTimePicker, LocalizationProvider } from '@mui/x-date-pickers';\n\ntype Props = {\n  open: boolean;\n  handleClose: () => void;\n  currentNote?: FollowUpNote;\n  currentCase: NetworkCase;\n};\n\nfunction FollowUpNoteCreate({ open, handleClose, currentNote, currentCase }: Props) {\n  const { enqueueSnackbar } = useSnackbar();\n  const { mutate } = useSWRConfig();\n\n  const NewSchema = Yup.object().shape({\n    dueDate: Yup.string().required('Campo obligatorio'),\n    description: Yup.string().required('Campo obligatorio'),\n  });\n\n  const defaultValues = useMemo(\n    (): FollowUpNoteBody => ({\n      caseId: currentCase.id,\n      description: currentNote?.description ?? '',\n      victimThoughts: currentNote?.victimThoughts ?? '',\n      observations: currentNote?.observations ?? '',\n      topics: currentNote?.topics ?? '',\n      comprehension: currentNote?.comprehension ?? '',\n      needs: currentNote?.needs ?? '',\n      survivorPlan: currentNote?.survivorPlan ?? '',\n      evaluatorPlan: currentNote?.evaluatorPlan ?? '',\n      userInChargeId: currentCase.followUpUserInCharge.id,\n      dueDate: currentNote?.dueDate ?? new Date().toString(),\n      completed: currentNote?.completed ?? false,\n    }),\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [currentNote]\n  );\n\n  const methods = useForm<FollowUpNoteBody>({\n    resolver: yupResolver(NewSchema),\n    defaultValues,\n  });\n\n  const {\n    reset,\n    handleSubmit,\n    formState: { isSubmitting },\n    watch,\n    setValue,\n  } = methods;\n\n  useEffect(() => {\n    reset(defaultValues);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [defaultValues]);\n\n  const onSubmit = async (data: FollowUpNoteBody) => {\n    try {\n      if (currentNote) {\n        const note = await editAsync<FollowUpNoteBody, FollowUpNote>(\n          `${FOLLOW_UP_BASE_URL}/${currentNote.id}`,\n          {\n            ...data,\n            dueDate: dayjs(data.dueDate).toISOString(),\n          }\n        );\n        mutate<NetworkCase>(`${CASE_BASE_URL}/${currentCase.id}`, {\n          ...currentCase,\n          followUpNotes: [\n            ...currentCase.followUpNotes.filter((f) => f.id !== currentNote.id),\n            note,\n          ],\n        });\n        enqueueSnackbar('Formulario demográfico guardado.');\n        handleClose();\n      } else {\n        const note = await createAsync<FollowUpNoteBody, FollowUpNote>(FOLLOW_UP_BASE_URL, {\n          ...data,\n          dueDate: dayjs(data.dueDate).toISOString(),\n        });\n        mutate<NetworkCase>(`${CASE_BASE_URL}/${currentCase.id}`, {\n          ...currentCase,\n          followUpNotes: [...currentCase.followUpNotes, note],\n        });\n        enqueueSnackbar('Formulario demográfico creado.');\n        handleClose();\n      }\n    } catch (error) {\n      enqueueSnackbar('Ocurrió un error al guardar los datos, inténtalo de nuevo', {\n        variant: 'error',\n      });\n    }\n  };\n\n  const watchDueDate = watch('dueDate');\n\n  return (\n    <Dialog open={open} onClose={handleClose} fullWidth maxWidth=\"xl\">\n      <FormProvider {...methods}>\n        <form onSubmit={handleSubmit(onSubmit)}>\n          <DialogTitle>Nota de Seguimiento</DialogTitle>\n          <DialogContent>\n            <Box sx={{ display: 'flex', flexDirection: 'column', gap: 2 }}>\n              <Box\n                sx={{\n                  display: 'grid',\n                  columnGap: 2,\n                  rowGap: 3,\n                  gridTemplateColumns: { xs: 'repeat(1, 1fr)', sm: 'repeat(3, 1fr)' },\n                  mt: 3,\n                }}\n              >\n                <TextField\n                  disabled\n                  label=\"Nombre del sobreviviente\"\n                  value={currentCase?.victim?.name}\n                />\n                <TextField\n                  disabled\n                  label=\"Organización de la persona que tuvo contacto con sobreviviente\"\n                  value={currentCase?.provider?.name}\n                />\n                <TextField\n                  disabled\n                  label=\"Nombre de persona que tuvo contacto con sobreviviente\"\n                  value={currentCase.followUpUserInCharge?.name}\n                />\n                <LocalizationProvider dateAdapter={AdapterDayjs}>\n                  <DateTimePicker\n                    label=\"Fecha para Seguimiento (Se notificará a la víctima)\"\n                    inputFormat=\"DD/MM/YYYY HH:mm\"\n                    value={watchDueDate}\n                    onChange={(e) => e && setValue('dueDate', e)}\n                    renderInput={(params) => <TextField {...params} />}\n                  />\n                </LocalizationProvider>\n              </Box>\n              <Typography variant=\"h5\" sx={{ mt: 2 }}>\n                Describir:{' '}\n              </Typography>\n              <RHFTextField\n                name=\"description\"\n                label=\"Descripción general de la interacción. (Quién, cuándo, qué, dónde)\"\n                multiline\n                rows={3}\n              />\n              {currentNote && (\n                <>\n                  <RHFTextField\n                    name=\"victimThoughts\"\n                    label=\"¿Qué es lo que el/la sobreviviente le está diciendo? (Los pensamientos, sentimientos, observaciones, etc.)\"\n                    multiline\n                    rows={3}\n                  />\n                  <RHFTextField\n                    name=\"observations\"\n                    label=\"¿Qué observaciones tiene de el/la sobreviviente? (Sus pensamientos y observaciones sobre la Participante (sentimientos, apariencia, estado de ánimo, etc.)\"\n                    multiline\n                    rows={3}\n                  />\n                  <RHFTextField\n                    name=\"topics\"\n                    label=\"Temas revisados, cuestiones que surgieron.\"\n                    multiline\n                    rows={3}\n                  />\n                  <Typography variant=\"h5\" sx={{ mt: 2 }}>\n                    Evaluar:\n                  </Typography>\n                  <RHFTextField\n                    name=\"comprehension\"\n                    label=\"¿Cuál es su comprensión de lo que está sucediendo con el/la sobreviviente (cómo las cosas\n                  están/no están progresando)?\"\n                    multiline\n                    rows={3}\n                  />\n                  <RHFTextField\n                    name=\"needs\"\n                    label=\"¿Qué cree que es necesario para ayudar a el/la sobreviviente a progresar más?\"\n                    multiline\n                    rows={3}\n                  />\n                  <Typography variant=\"h5\" sx={{ mt: 2 }}>\n                    Plan:\n                  </Typography>\n                  <RHFTextField\n                    name=\"survivorPlan\"\n                    label=\"¿Qué sucederá a continuación? ¿Qué hará el/la sobreviviente a continuación? ¿tiene tareas escolares?\"\n                    multiline\n                    rows={3}\n                  />\n                  <RHFTextField\n                    name=\"evaluatorPlan\"\n                    label=\"¿Qué va a hacer usted a continuación? ¿Hay llamadas que usted necesita hacer, personas con la que debe comunicarse, citas que debe organizar, etc.? ¿Cuándo será la próxima vez que usted verá a el/la sobreviviente?\"\n                    multiline\n                    rows={3}\n                  />\n                  <RHFCheckbox name=\"completed\" label=\"Marcar como completado\" sx={{ mt: 3 }} />\n                </>\n              )}\n            </Box>\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={handleClose}>Cancelar</Button>\n            <LoadingButton type=\"submit\" variant=\"contained\" loading={isSubmitting}>\n              Guardar Cambios\n            </LoadingButton>\n          </DialogActions>\n        </form>\n      </FormProvider>\n    </Dialog>\n  );\n}\n\nexport default FollowUpNoteCreate;\n","import {\n  Box,\n  Button,\n  Card,\n  Container,\n  IconButton,\n  Table,\n  TableBody,\n  TableContainer,\n  TablePagination,\n  Tooltip,\n} from '@mui/material';\nimport { useState } from 'react';\nimport { Link as RouterLink, useNavigate, useParams } from 'react-router-dom';\nimport { CASE_BASE_URL, CurrentCase, NetworkCase } from 'src/@types/case';\nimport { FollowUpNote, FOLLOW_UP_BASE_URL } from 'src/@types/follow-up';\nimport HeaderBreadcrumbs from 'src/components/HeaderBreadcrumbs';\nimport Iconify from 'src/components/Iconify';\nimport Page from 'src/components/Page';\nimport Scrollbar from 'src/components/Scrollbar';\nimport {\n  TableEmptyRows,\n  TableHeadCustom,\n  TableNoData,\n  TableSelectedActions,\n} from 'src/components/table';\nimport useSettings from 'src/hooks/useSettings';\nimport useTable, { emptyRows } from 'src/hooks/useTable';\nimport { PATH_DASHBOARD } from 'src/routes/paths';\nimport FollowUpTableRow from 'src/sections/@dashboard/follow-up-note/FollowUpNoteTableRow';\nimport { removeAsync } from 'src/services/APIGateway';\nimport useSWR from 'swr';\nimport FollowUpCreate from './FollowUpNoteCreate';\n\nconst TABLE_HEAD = [\n  { id: 'id', label: 'ID', align: 'left' },\n  { id: 'description', label: 'Descripción', align: 'left' },\n  { id: 'createdAt', label: 'Fecha', align: 'left' },\n  { id: '' },\n];\n\nexport default function FollowUpNoteList() {\n  const { themeStretch } = useSettings();\n  const [open, setOpen] = useState(false);\n  const [selectedNote, setSelectedNote] = useState<FollowUpNote | undefined>();\n  const {\n    dense,\n    page,\n    order,\n    orderBy,\n    rowsPerPage,\n    //\n    selected,\n    setSelected,\n    onSelectRow,\n    onSelectAllRows,\n    //\n    onSort,\n    onChangePage,\n    onChangeRowsPerPage,\n  } = useTable();\n  const denseHeight = dense ? 52 : 72;\n  const { id } = useParams();\n  const { data: currentCase, mutate } = useSWR<NetworkCase>(id ? `${CASE_BASE_URL}/${id}` : null);\n  const { followUpNotes: tableData = [] } = currentCase ?? {};\n  const isNotFound = !tableData.length;\n\n  const handleDeleteRow = (id: number) => {\n    if (currentCase) {\n      mutate(async () => removeAsync(`${FOLLOW_UP_BASE_URL}/${id}`), {\n        optimisticData: {\n          ...currentCase,\n          followUpNotes: tableData.filter((d) => d.id !== id),\n        },\n        rollbackOnError: true,\n      });\n      setSelected([]);\n    }\n  };\n\n  const handleDeleteRows = (selected: (number | string)[]) => {\n    // TODO: Handle rows delete\n    setSelected([]);\n  };\n\n  const handleEditRow = (note: FollowUpNote) => {\n    setOpen(true);\n    setSelectedNote(note);\n  };\n\n  return (\n    <Page title=\"Notas de Seguimiento\">\n      <Container maxWidth={themeStretch ? false : 'lg'}>\n        {currentCase && (\n          <FollowUpCreate\n            currentCase={currentCase}\n            open={open}\n            handleClose={() => {\n              setOpen(false);\n              setSelectedNote(undefined);\n            }}\n            currentNote={selectedNote}\n          />\n        )}\n        <HeaderBreadcrumbs\n          heading={`Notas de Seguimiento para Caso #${currentCase?.id}`}\n          links={[\n            { name: 'Dashboard', href: PATH_DASHBOARD.root },\n            {\n              name: `Caso #${currentCase?.id}`,\n              href: currentCase\n                ? PATH_DASHBOARD.general.cases.edit(currentCase.id)\n                : PATH_DASHBOARD.general.cases.new,\n            },\n            { name: 'Notas de Seguimiento' },\n          ]}\n          action={\n            <Button\n              variant=\"contained\"\n              onClick={() => {\n                setOpen(true);\n                setSelectedNote(undefined);\n              }}\n              startIcon={<Iconify icon={'eva:plus-fill'} />}\n              disabled={currentCase?.inactive || currentCase?.completed}\n            >\n              Programar Nota de Seguimiento\n            </Button>\n          }\n        />\n\n        <Card>\n          <Scrollbar>\n            <TableContainer sx={{ minWidth: 800, position: 'relative', pt: 1 }}>\n              {selected.length > 0 && (\n                <TableSelectedActions\n                  dense={dense}\n                  numSelected={selected.length}\n                  rowCount={tableData.length}\n                  onSelectAllRows={(checked) =>\n                    onSelectAllRows(\n                      checked,\n                      tableData.map((row) => row.id)\n                    )\n                  }\n                  actions={\n                    <Tooltip title=\"Delete\">\n                      <IconButton color=\"primary\" onClick={() => handleDeleteRows(selected)}>\n                        <Iconify icon={'eva:trash-2-outline'} />\n                      </IconButton>\n                    </Tooltip>\n                  }\n                />\n              )}\n\n              <Table size={dense ? 'small' : 'medium'}>\n                <TableHeadCustom\n                  order={order}\n                  orderBy={orderBy}\n                  headLabel={TABLE_HEAD}\n                  rowCount={tableData.length}\n                  numSelected={selected.length}\n                  onSort={onSort}\n                  onSelectAllRows={(checked) =>\n                    onSelectAllRows(\n                      checked,\n                      tableData.map((row) => row.id)\n                    )\n                  }\n                />\n\n                <TableBody>\n                  {tableData\n                    .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                    .map((row) => (\n                      <FollowUpTableRow\n                        key={row.id}\n                        row={row}\n                        selected={selected.includes(row.id)}\n                        onSelectRow={() => onSelectRow(row.id)}\n                        onDeleteRow={() => handleDeleteRow(row.id)}\n                        onEditRow={() => handleEditRow(row)}\n                      />\n                    ))}\n\n                  <TableEmptyRows\n                    height={denseHeight}\n                    emptyRows={emptyRows(page, rowsPerPage, tableData.length)}\n                  />\n\n                  <TableNoData isNotFound={isNotFound} />\n                </TableBody>\n              </Table>\n            </TableContainer>\n          </Scrollbar>\n\n          <Box sx={{ position: 'relative' }}>\n            <TablePagination\n              rowsPerPageOptions={[5, 10, 25]}\n              component=\"div\"\n              count={tableData.length}\n              rowsPerPage={rowsPerPage}\n              page={page}\n              onPageChange={onChangePage}\n              onRowsPerPageChange={onChangeRowsPerPage}\n            />\n          </Box>\n        </Card>\n      </Container>\n    </Page>\n  );\n}\n","import axiosInstance from 'src/utils/axios';\n\nexport const getAsync = async <T>(route: string): Promise<T> => {\n  const result = await axiosInstance.get<T>(route);\n  return result.data;\n};\n\nexport const createAsync = async <T, K = T>(route: string, body: T): Promise<K> => {\n  const result = await axiosInstance.post<K>(route, body);\n  return result.data;\n};\n\nexport const editAsync = async <T, K = T>(route: string, body: T): Promise<K> => {\n  const result = await axiosInstance.put<K>(route, body);\n  return result.data;\n};\n\nexport const removeAsync = async <T>(route: string): Promise<T> => {\n  const result = await axiosInstance.delete<T>(route);\n  return result.data;\n};\n"],"names":["CASE_BASE_URL","COMMENT_BASE_URL","CASE_STATUS","Breadcrumbs","links","activeLast","other","currentLink","length","name","listDefault","map","link","LinkItem","listActiveLast","Typography","variant","sx","maxWidth","overflow","whiteSpace","color","textOverflow","separator","Box","component","width","height","borderRadius","bgcolor","href","icon","Link","RouterLink","to","lineHeight","display","alignItems","mr","HeaderBreadcrumbs","action","heading","moreLink","mb","flexGrow","gutterBottom","flexShrink","mt","target","rel","noWrap","RootStyle","styled","textAlign","flexDirection","justifyContent","padding","theme","spacing","EmptyContent","title","description","img","Image","disabledEffect","visibleByDefault","alt","src","TableNoData","isNotFound","colSpan","p","TableMoreMenu","actions","open","onClose","onOpen","IconButton","onClick","Iconify","MenuPopover","Boolean","anchorEl","anchorOrigin","vertical","horizontal","transformOrigin","arrow","px","typography","TableEmptyRows","emptyRows","visuallyHidden","border","margin","position","clip","TableHeadCustom","order","orderBy","rowCount","headLabel","numSelected","onSort","onSelectAllRows","TableHead","Checkbox","indeterminate","checked","onChange","event","headCell","align","sortDirection","id","minWidth","TableSortLabel","hideSortIcon","active","direction","textTransform","label","TableSelectedActions","dense","top","left","right","zIndex","pl","ml","useTable","props","useState","defaultDense","setDense","defaultOrderBy","setOrderBy","defaultOrder","setOrder","defaultCurrentPage","page","setPage","defaultRowsPerPage","rowsPerPage","setRowsPerPage","defaultSelected","selected","setSelected","onSelectRow","selectedIndex","indexOf","newSelected","concat","slice","newSelecteds","onChangePage","newPage","onChangeDense","onChangeRowsPerPage","parseInt","value","descendingComparator","a","b","getComparator","arrayLength","Math","max","FOLLOW_UP_BASE_URL","FollowUpNoteTableRow","row","onEditRow","onDeleteRow","dueDate","openMenu","setOpenMenuActions","handleCloseMenu","TableRow","hover","TableCell","dayjs","calendar","sameDay","nextDay","nextWednesday","sameElse","currentTarget","MenuItem","handleClose","currentNote","currentCase","enqueueSnackbar","useSnackbar","mutate","useSWRConfig","NewSchema","Yup","shape","required","defaultValues","useMemo","caseId","victimThoughts","observations","topics","comprehension","needs","survivorPlan","evaluatorPlan","userInChargeId","followUpUserInCharge","Date","toString","completed","methods","useForm","resolver","yupResolver","reset","handleSubmit","isSubmitting","formState","watch","setValue","useEffect","onSubmit","data","editAsync","toISOString","note","followUpNotes","filter","f","createAsync","watchDueDate","Dialog","fullWidth","DialogTitle","DialogContent","gap","columnGap","rowGap","gridTemplateColumns","xs","sm","TextField","disabled","victim","provider","LocalizationProvider","dateAdapter","AdapterDayjs","DateTimePicker","inputFormat","e","renderInput","params","multiline","rows","DialogActions","Button","LoadingButton","type","loading","TABLE_HEAD","FollowUpNoteList","themeStretch","useSettings","setOpen","selectedNote","setSelectedNote","denseHeight","useParams","useSWR","tableData","Page","Container","undefined","PATH_DASHBOARD","startIcon","inactive","Card","Scrollbar","TableContainer","pt","Tooltip","Table","size","TableBody","includes","removeAsync","optimisticData","d","rollbackOnError","handleDeleteRow","TablePagination","rowsPerPageOptions","count","onPageChange","onRowsPerPageChange","getAsync","route","axiosInstance","result","body"],"sourceRoot":""}