{"version":3,"file":"static/js/5994.d35d089e.chunk.js","mappings":"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","sources":["components/Breadcrumbs.tsx","components/HeaderBreadcrumbs.tsx","sections/@dashboard/service-type/ServiceTypeNewEditForm.tsx","pages/dashboard/service-type/ServiceTypeCreate.tsx","services/APIGateway.ts","../node_modules/@mui/material/internal/svg-icons/MoreHoriz.js","../node_modules/@mui/material/Breadcrumbs/BreadcrumbCollapsed.js","../node_modules/@mui/material/Breadcrumbs/breadcrumbsClasses.js","../node_modules/@mui/material/Breadcrumbs/Breadcrumbs.js"],"sourcesContent":["import { ReactElement } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\n// @mui\nimport {\n  Box,\n  Link,\n  Typography,\n  BreadcrumbsProps,\n  Breadcrumbs as MUIBreadcrumbs,\n} from '@mui/material';\n\n// ----------------------------------------------------------------------\n\ntype TLink = {\n  href?: string;\n  name: string;\n  icon?: ReactElement;\n};\n\nexport interface Props extends BreadcrumbsProps {\n  links: TLink[];\n  activeLast?: boolean;\n}\n\nexport default function Breadcrumbs({ links, activeLast = false, ...other }: Props) {\n  const currentLink = links[links.length - 1].name;\n\n  const listDefault = links.map((link) => <LinkItem key={link.name} link={link} />);\n\n  const listActiveLast = links.map((link) => (\n    <div key={link.name}>\n      {link.name !== currentLink ? (\n        <LinkItem link={link} />\n      ) : (\n        <Typography\n          variant=\"body2\"\n          sx={{\n            maxWidth: 260,\n            overflow: 'hidden',\n            whiteSpace: 'nowrap',\n            color: 'text.disabled',\n            textOverflow: 'ellipsis',\n          }}\n        >\n          {currentLink}\n        </Typography>\n      )}\n    </div>\n  ));\n\n  return (\n    <MUIBreadcrumbs\n      separator={\n        <Box\n          component=\"span\"\n          sx={{ width: 4, height: 4, borderRadius: '50%', bgcolor: 'text.disabled' }}\n        />\n      }\n      {...other}\n    >\n      {activeLast ? listDefault : listActiveLast}\n    </MUIBreadcrumbs>\n  );\n}\n\n// ----------------------------------------------------------------------\n\ntype LinkItemProps = {\n  link: TLink;\n};\n\nfunction LinkItem({ link }: LinkItemProps) {\n  const { href, name, icon } = link;\n  return (\n    <Link\n      key={name}\n      variant=\"body2\"\n      component={RouterLink}\n      to={href || '#'}\n      sx={{\n        lineHeight: 2,\n        display: 'flex',\n        alignItems: 'center',\n        color: 'text.primary',\n        '& > div': { display: 'inherit' },\n      }}\n    >\n      {icon && <Box sx={{ mr: 1, '& svg': { width: 20, height: 20 } }}>{icon}</Box>}\n      {name}\n    </Link>\n  );\n}\n","import { ReactNode } from 'react';\n// @mui\nimport { Box, Typography, Link } from '@mui/material';\n//\nimport Breadcrumbs, { Props as BreadcrumbsProps } from './Breadcrumbs';\n\n// ----------------------------------------------------------------------\n\ninterface Props extends BreadcrumbsProps {\n  action?: ReactNode;\n  heading: string;\n  moreLink?: string | string[];\n}\n\nexport default function HeaderBreadcrumbs({\n  links,\n  action,\n  heading,\n  moreLink = '' || [],\n  sx,\n  ...other\n}: Props) {\n  return (\n    <Box sx={{ mb: 5, ...sx }}>\n      <Box sx={{ display: 'flex', alignItems: 'center' }}>\n        <Box sx={{ flexGrow: 1 }}>\n          <Typography variant=\"h4\" gutterBottom>\n            {heading}\n          </Typography>\n          <Breadcrumbs links={links} {...other} />\n        </Box>\n\n        {action && <Box sx={{ flexShrink: 0 }}>{action}</Box>}\n      </Box>\n\n      <Box sx={{ mt: 2 }}>\n        {typeof moreLink === 'string' ? (\n          <Link href={moreLink} target=\"_blank\" rel=\"noopener\" variant=\"body2\">\n            {moreLink}\n          </Link>\n        ) : (\n          moreLink.map((href) => (\n            <Link\n              noWrap\n              key={href}\n              href={href}\n              variant=\"body2\"\n              target=\"_blank\"\n              rel=\"noopener\"\n              sx={{ display: 'table' }}\n            >\n              {href}\n            </Link>\n          ))\n        )}\n      </Box>\n    </Box>\n  );\n}\n","import { yupResolver } from '@hookform/resolvers/yup';\nimport { LoadingButton } from '@mui/lab';\nimport { Box, Card, Grid, Stack, Typography } from '@mui/material';\nimport { useSnackbar } from 'notistack';\nimport { useEffect, useMemo } from 'react';\nimport { FormProvider, useForm } from 'react-hook-form';\nimport { useNavigate } from 'react-router';\nimport { ServiceType } from 'src/@types/service-type';\nimport { RHFTextField } from 'src/components/hook-form';\nimport { PATH_DASHBOARD } from 'src/routes/paths';\nimport { createAsync, editAsync } from 'src/services/APIGateway';\nimport { useSWRConfig } from 'swr';\nimport * as Yup from 'yup';\n\ntype Props = {\n  isEdit: boolean;\n  currentService?: ServiceType;\n};\n\nconst BASE_URL = '/service-type';\n\nexport default function ServiceTypeNewEditForm({ isEdit, currentService }: Props) {\n  const { enqueueSnackbar } = useSnackbar();\n  const navigate = useNavigate();\n  const { mutate } = useSWRConfig();\n\n  const NewSchema = Yup.object().shape({\n    name: Yup.string().required('Campo obligatorio'),\n    description: Yup.string().required('Campo obligatorio'),\n  });\n\n  const defaultValues = useMemo(\n    (): Omit<ServiceType, 'id'> => ({\n      name: currentService?.name ?? '',\n      description: currentService?.description ?? '',\n    }),\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [currentService]\n  );\n\n  const methods = useForm<ServiceType>({\n    resolver: yupResolver(NewSchema),\n    defaultValues,\n  });\n\n  const {\n    reset,\n    handleSubmit,\n    formState: { isSubmitting },\n  } = methods;\n\n  useEffect(() => {\n    if (isEdit && currentService) {\n      reset(defaultValues);\n    }\n    if (!isEdit) {\n      reset(defaultValues);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [isEdit, currentService]);\n\n  const onSubmit = async (data: ServiceType) => {\n    try {\n      if (isEdit && currentService) {\n        mutate<ServiceType[]>(\n          BASE_URL,\n          async (services = []) => {\n            const updatedService = await editAsync<ServiceType>(\n              `${BASE_URL}/${currentService.id}`,\n              data\n            );\n            const filtered = services.filter((service) => service.id !== currentService.id);\n            return [...filtered, updatedService];\n          },\n          { revalidate: false }\n        );\n      } else if (!isEdit) {\n        await createAsync<ServiceType>(BASE_URL, data);\n      }\n      navigate(PATH_DASHBOARD.serviceType.list);\n      enqueueSnackbar(currentService ? 'Cambios guardados' : 'Tipo de Servicio Creado');\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  return (\n    <FormProvider {...methods}>\n      <form onSubmit={handleSubmit(onSubmit)}>\n        <Grid container spacing={3}>\n          <Grid item xs={12} md={12} sx={{ mt: 2 }}>\n            <Card sx={{ p: 3, flexDirection: 'column', display: 'flex' }}>\n              <Typography variant=\"h5\" noWrap>\n                Información General\n              </Typography>\n              <Box\n                sx={{\n                  display: 'grid',\n                  columnGap: 2,\n                  rowGap: 3,\n                  gridTemplateColumns: { xs: 'repeat(1, 1fr)', sm: 'repeat(2, 1fr)' },\n                  mt: 3,\n                }}\n              >\n                <RHFTextField name=\"name\" label=\"Nombre del tipo de servicio\" />\n                <RHFTextField name=\"description\" label=\"Descripción\" />\n              </Box>\n            </Card>\n          </Grid>\n          <Grid item xs={12} md={12}>\n            <Stack alignItems=\"flex-end\" sx={{ mt: 2 }}>\n              <LoadingButton type=\"submit\" variant=\"contained\" loading={isSubmitting}>\n                {!isEdit ? 'Crear Tipo de Servicio' : 'Guardar Cambios'}\n              </LoadingButton>\n            </Stack>\n          </Grid>\n        </Grid>\n      </form>\n    </FormProvider>\n  );\n}\n","import { useParams } from 'react-router-dom';\n// @mui\nimport { Container } from '@mui/material';\nimport useSettings from 'src/hooks/useSettings';\nimport Page from 'src/components/Page';\nimport { PATH_DASHBOARD } from 'src/routes/paths';\nimport HeaderBreadcrumbs from 'src/components/HeaderBreadcrumbs';\nimport useSWR from 'swr';\nimport { ServiceType } from 'src/@types/service-type';\nimport ServiceTypeNewEditForm from 'src/sections/@dashboard/service-type/ServiceTypeNewEditForm';\nimport RoleBasedGuard from 'src/guards/RoleBasedGuard';\nimport { ModuleType } from 'src/@types/module';\n\nexport default function ServiceTypeCreate() {\n  const { themeStretch } = useSettings();\n  const { id } = useParams();\n  const isEdit = !!id;\n\n  const { data: currentService } = useSWR<ServiceType>(id && `/service-type/${id}`);\n\n  return (\n    <RoleBasedGuard hasContent moduleId={ModuleType.SERVICE_TYPE} onlyRootProvider>\n      <Page title=\"Nuevo Tipo de Servicio\">\n        <Container maxWidth={themeStretch ? false : 'lg'}>\n          <HeaderBreadcrumbs\n            heading={!isEdit ? 'Nuevo Tipo de Servicio' : 'Editar Tipo de Servicio'}\n            links={[\n              { name: 'Dashboard', href: PATH_DASHBOARD.root },\n              { name: 'Tipos de Servicio', href: PATH_DASHBOARD.serviceType.list },\n              { name: !isEdit ? 'Nuevo Tipo de Servicio' : 'Tipo de Servicio' },\n            ]}\n          />\n          <ServiceTypeNewEditForm isEdit={isEdit} currentService={currentService} />\n        </Container>\n      </Page>\n    </RoleBasedGuard>\n  );\n}\n","import axiosInstance from 'src/utils/axios';\n\nexport const getAsync = async <T>(route: string): Promise<T> => {\n  const result = await axiosInstance.get<T>(route);\n  return result.data;\n};\n\nexport const createAsync = async <T, K = T>(route: string, body: T): Promise<K> => {\n  const result = await axiosInstance.post<K>(route, body);\n  return result.data;\n};\n\nexport const editAsync = async <T, K = T>(route: string, body: T): Promise<K> => {\n  const result = await axiosInstance.put<K>(route, body);\n  return result.data;\n};\n\nexport const removeAsync = async <T>(route: string): Promise<T> => {\n  const result = await axiosInstance.delete<T>(route);\n  return result.data;\n};\n","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M6 10c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm12 0c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm-6 0c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\"\n}), 'MoreHoriz');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { emphasize } from '@mui/system';\nimport styled from '../styles/styled';\nimport MoreHorizIcon from '../internal/svg-icons/MoreHoriz';\nimport ButtonBase from '../ButtonBase';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst BreadcrumbCollapsedButton = styled(ButtonBase)(({\n  theme\n}) => _extends({\n  display: 'flex',\n  marginLeft: `calc(${theme.spacing(1)} * 0.5)`,\n  marginRight: `calc(${theme.spacing(1)} * 0.5)`\n}, theme.palette.mode === 'light' ? {\n  backgroundColor: theme.palette.grey[100],\n  color: theme.palette.grey[700]\n} : {\n  backgroundColor: theme.palette.grey[700],\n  color: theme.palette.grey[100]\n}, {\n  borderRadius: 2,\n  '&:hover, &:focus': _extends({}, theme.palette.mode === 'light' ? {\n    backgroundColor: theme.palette.grey[200]\n  } : {\n    backgroundColor: theme.palette.grey[600]\n  }),\n  '&:active': _extends({\n    boxShadow: theme.shadows[0]\n  }, theme.palette.mode === 'light' ? {\n    backgroundColor: emphasize(theme.palette.grey[200], 0.12)\n  } : {\n    backgroundColor: emphasize(theme.palette.grey[600], 0.12)\n  })\n}));\nconst BreadcrumbCollapsedIcon = styled(MoreHorizIcon)({\n  width: 24,\n  height: 16\n});\n/**\n * @ignore - internal component.\n */\n\nfunction BreadcrumbCollapsed(props) {\n  const ownerState = props;\n  return /*#__PURE__*/_jsx(\"li\", {\n    children: /*#__PURE__*/_jsx(BreadcrumbCollapsedButton, _extends({\n      focusRipple: true\n    }, props, {\n      ownerState: ownerState,\n      children: /*#__PURE__*/_jsx(BreadcrumbCollapsedIcon, {\n        ownerState: ownerState\n      })\n    }))\n  });\n}\n\nprocess.env.NODE_ENV !== \"production\" ? BreadcrumbCollapsed.propTypes = {\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object\n} : void 0;\nexport default BreadcrumbCollapsed;","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getBreadcrumbsUtilityClass(slot) {\n  return generateUtilityClass('MuiBreadcrumbs', slot);\n}\nconst breadcrumbsClasses = generateUtilityClasses('MuiBreadcrumbs', ['root', 'ol', 'li', 'separator']);\nexport default breadcrumbsClasses;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"children\", \"className\", \"component\", \"expandText\", \"itemsAfterCollapse\", \"itemsBeforeCollapse\", \"maxItems\", \"separator\"];\nimport * as React from 'react';\nimport { isFragment } from 'react-is';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { integerPropType } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport Typography from '../Typography';\nimport BreadcrumbCollapsed from './BreadcrumbCollapsed';\nimport breadcrumbsClasses, { getBreadcrumbsUtilityClass } from './breadcrumbsClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root'],\n    li: ['li'],\n    ol: ['ol'],\n    separator: ['separator']\n  };\n  return composeClasses(slots, getBreadcrumbsUtilityClass, classes);\n};\n\nconst BreadcrumbsRoot = styled(Typography, {\n  name: 'MuiBreadcrumbs',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    return [{\n      [`& .${breadcrumbsClasses.li}`]: styles.li\n    }, styles.root];\n  }\n})({});\nconst BreadcrumbsOl = styled('ol', {\n  name: 'MuiBreadcrumbs',\n  slot: 'Ol',\n  overridesResolver: (props, styles) => styles.ol\n})({\n  display: 'flex',\n  flexWrap: 'wrap',\n  alignItems: 'center',\n  padding: 0,\n  margin: 0,\n  listStyle: 'none'\n});\nconst BreadcrumbsSeparator = styled('li', {\n  name: 'MuiBreadcrumbs',\n  slot: 'Separator',\n  overridesResolver: (props, styles) => styles.separator\n})({\n  display: 'flex',\n  userSelect: 'none',\n  marginLeft: 8,\n  marginRight: 8\n});\n\nfunction insertSeparators(items, className, separator, ownerState) {\n  return items.reduce((acc, current, index) => {\n    if (index < items.length - 1) {\n      acc = acc.concat(current, /*#__PURE__*/_jsx(BreadcrumbsSeparator, {\n        \"aria-hidden\": true,\n        className: className,\n        ownerState: ownerState,\n        children: separator\n      }, `separator-${index}`));\n    } else {\n      acc.push(current);\n    }\n\n    return acc;\n  }, []);\n}\n\nconst Breadcrumbs = /*#__PURE__*/React.forwardRef(function Breadcrumbs(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiBreadcrumbs'\n  });\n\n  const {\n    children,\n    className,\n    component = 'nav',\n    expandText = 'Show path',\n    itemsAfterCollapse = 1,\n    itemsBeforeCollapse = 1,\n    maxItems = 8,\n    separator = '/'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const [expanded, setExpanded] = React.useState(false);\n\n  const ownerState = _extends({}, props, {\n    component,\n    expanded,\n    expandText,\n    itemsAfterCollapse,\n    itemsBeforeCollapse,\n    maxItems,\n    separator\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  const listRef = React.useRef(null);\n\n  const renderItemsBeforeAndAfter = allItems => {\n    const handleClickExpand = () => {\n      setExpanded(true); // The clicked element received the focus but gets removed from the DOM.\n      // Let's keep the focus in the component after expanding.\n      // Moving it to the <ol> or <nav> does not cause any announcement in NVDA.\n      // By moving it to some link/button at least we have some announcement.\n\n      const focusable = listRef.current.querySelector('a[href],button,[tabindex]');\n\n      if (focusable) {\n        focusable.focus();\n      }\n    }; // This defends against someone passing weird input, to ensure that if all\n    // items would be shown anyway, we just show all items without the EllipsisItem\n\n\n    if (itemsBeforeCollapse + itemsAfterCollapse >= allItems.length) {\n      if (process.env.NODE_ENV !== 'production') {\n        console.error(['MUI: You have provided an invalid combination of props to the Breadcrumbs.', `itemsAfterCollapse={${itemsAfterCollapse}} + itemsBeforeCollapse={${itemsBeforeCollapse}} >= maxItems={${maxItems}}`].join('\\n'));\n      }\n\n      return allItems;\n    }\n\n    return [...allItems.slice(0, itemsBeforeCollapse), /*#__PURE__*/_jsx(BreadcrumbCollapsed, {\n      \"aria-label\": expandText,\n      onClick: handleClickExpand\n    }, \"ellipsis\"), ...allItems.slice(allItems.length - itemsAfterCollapse, allItems.length)];\n  };\n\n  const allItems = React.Children.toArray(children).filter(child => {\n    if (process.env.NODE_ENV !== 'production') {\n      if (isFragment(child)) {\n        console.error([\"MUI: The Breadcrumbs component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n'));\n      }\n    }\n\n    return /*#__PURE__*/React.isValidElement(child);\n  }).map((child, index) => /*#__PURE__*/_jsx(\"li\", {\n    className: classes.li,\n    children: child\n  }, `child-${index}`));\n  return /*#__PURE__*/_jsx(BreadcrumbsRoot, _extends({\n    ref: ref,\n    component: component,\n    color: \"text.secondary\",\n    className: clsx(classes.root, className),\n    ownerState: ownerState\n  }, other, {\n    children: /*#__PURE__*/_jsx(BreadcrumbsOl, {\n      className: classes.ol,\n      ref: listRef,\n      ownerState: ownerState,\n      children: insertSeparators(expanded || maxItems && allItems.length <= maxItems ? allItems : renderItemsBeforeAndAfter(allItems), classes.separator, separator, ownerState)\n    })\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Breadcrumbs.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * Override the default label for the expand button.\n   *\n   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).\n   * @default 'Show path'\n   */\n  expandText: PropTypes.string,\n\n  /**\n   * If max items is exceeded, the number of items to show after the ellipsis.\n   * @default 1\n   */\n  itemsAfterCollapse: integerPropType,\n\n  /**\n   * If max items is exceeded, the number of items to show before the ellipsis.\n   * @default 1\n   */\n  itemsBeforeCollapse: integerPropType,\n\n  /**\n   * Specifies the maximum number of breadcrumbs to display. When there are more\n   * than the maximum number, only the first `itemsBeforeCollapse` and last `itemsAfterCollapse`\n   * will be shown, with an ellipsis in between.\n   * @default 8\n   */\n  maxItems: integerPropType,\n\n  /**\n   * Custom separator node.\n   * @default '/'\n   */\n  separator: PropTypes.node,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Breadcrumbs;"],"names":["Breadcrumbs","links","activeLast","other","currentLink","length","name","listDefault","map","link","LinkItem","listActiveLast","Typography","variant","sx","maxWidth","overflow","whiteSpace","color","textOverflow","separator","Box","component","width","height","borderRadius","bgcolor","href","icon","Link","RouterLink","to","lineHeight","display","alignItems","mr","HeaderBreadcrumbs","action","heading","moreLink","mb","flexGrow","gutterBottom","flexShrink","mt","target","rel","noWrap","BASE_URL","ServiceTypeNewEditForm","isEdit","currentService","enqueueSnackbar","useSnackbar","navigate","useNavigate","mutate","useSWRConfig","NewSchema","Yup","shape","required","description","defaultValues","useMemo","methods","useForm","resolver","yupResolver","reset","handleSubmit","isSubmitting","formState","useEffect","onSubmit","data","services","editAsync","id","updatedService","filtered","filter","service","revalidate","createAsync","PATH_DASHBOARD","console","error","Grid","container","spacing","item","xs","md","Card","p","flexDirection","columnGap","rowGap","gridTemplateColumns","sm","label","Stack","LoadingButton","type","loading","ServiceTypeCreate","themeStretch","useSettings","useParams","useSWR","RoleBasedGuard","hasContent","moduleId","ModuleType","onlyRootProvider","Page","title","Container","getAsync","route","axiosInstance","result","body","removeAsync","createSvgIcon","_jsx","d","BreadcrumbCollapsedButton","styled","ButtonBase","theme","_extends","marginLeft","marginRight","palette","mode","backgroundColor","grey","boxShadow","shadows","emphasize","BreadcrumbCollapsedIcon","MoreHorizIcon","props","ownerState","children","focusRipple","getBreadcrumbsUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","BreadcrumbsRoot","overridesResolver","styles","breadcrumbsClasses","li","root","BreadcrumbsOl","ol","flexWrap","padding","margin","listStyle","BreadcrumbsSeparator","userSelect","insertSeparators","items","className","reduce","acc","current","index","concat","push","React","inProps","ref","useThemeProps","expandText","itemsAfterCollapse","itemsBeforeCollapse","maxItems","_objectWithoutPropertiesLoose","expanded","setExpanded","classes","composeClasses","useUtilityClasses","listRef","allItems","child","clsx","slice","BreadcrumbCollapsed","onClick","focusable","querySelector","focus","renderItemsBeforeAndAfter"],"sourceRoot":""}