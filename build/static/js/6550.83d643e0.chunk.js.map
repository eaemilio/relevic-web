{"version":3,"file":"static/js/6550.83d643e0.chunk.js","mappings":"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","sources":["components/Breadcrumbs.tsx","components/HeaderBreadcrumbs.tsx","../node_modules/@mui/material/ToggleButtonGroup/isValueSelected.js","../node_modules/@mui/material/ToggleButtonGroup/toggleButtonGroupClasses.js","../node_modules/@mui/material/ToggleButtonGroup/ToggleButtonGroup.js","../node_modules/@mui/material/ToggleButton/toggleButtonClasses.js","../node_modules/@mui/material/ToggleButton/ToggleButton.js","pages/dashboard/PermissionDenied.tsx","../node_modules/@mui/material/internal/svg-icons/MoreHoriz.js","../node_modules/@mui/material/Breadcrumbs/BreadcrumbCollapsed.js","../node_modules/@mui/material/Breadcrumbs/breadcrumbsClasses.js","../node_modules/@mui/material/Breadcrumbs/Breadcrumbs.js"],"sourcesContent":["import { ReactElement } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\n// @mui\nimport {\n  Box,\n  Link,\n  Typography,\n  BreadcrumbsProps,\n  Breadcrumbs as MUIBreadcrumbs,\n} from '@mui/material';\n\n// ----------------------------------------------------------------------\n\ntype TLink = {\n  href?: string;\n  name: string;\n  icon?: ReactElement;\n};\n\nexport interface Props extends BreadcrumbsProps {\n  links: TLink[];\n  activeLast?: boolean;\n}\n\nexport default function Breadcrumbs({ links, activeLast = false, ...other }: Props) {\n  const currentLink = links[links.length - 1].name;\n\n  const listDefault = links.map((link) => <LinkItem key={link.name} link={link} />);\n\n  const listActiveLast = links.map((link) => (\n    <div key={link.name}>\n      {link.name !== currentLink ? (\n        <LinkItem link={link} />\n      ) : (\n        <Typography\n          variant=\"body2\"\n          sx={{\n            maxWidth: 260,\n            overflow: 'hidden',\n            whiteSpace: 'nowrap',\n            color: 'text.disabled',\n            textOverflow: 'ellipsis',\n          }}\n        >\n          {currentLink}\n        </Typography>\n      )}\n    </div>\n  ));\n\n  return (\n    <MUIBreadcrumbs\n      separator={\n        <Box\n          component=\"span\"\n          sx={{ width: 4, height: 4, borderRadius: '50%', bgcolor: 'text.disabled' }}\n        />\n      }\n      {...other}\n    >\n      {activeLast ? listDefault : listActiveLast}\n    </MUIBreadcrumbs>\n  );\n}\n\n// ----------------------------------------------------------------------\n\ntype LinkItemProps = {\n  link: TLink;\n};\n\nfunction LinkItem({ link }: LinkItemProps) {\n  const { href, name, icon } = link;\n  return (\n    <Link\n      key={name}\n      variant=\"body2\"\n      component={RouterLink}\n      to={href || '#'}\n      sx={{\n        lineHeight: 2,\n        display: 'flex',\n        alignItems: 'center',\n        color: 'text.primary',\n        '& > div': { display: 'inherit' },\n      }}\n    >\n      {icon && <Box sx={{ mr: 1, '& svg': { width: 20, height: 20 } }}>{icon}</Box>}\n      {name}\n    </Link>\n  );\n}\n","import { ReactNode } from 'react';\n// @mui\nimport { Box, Typography, Link } from '@mui/material';\n//\nimport Breadcrumbs, { Props as BreadcrumbsProps } from './Breadcrumbs';\n\n// ----------------------------------------------------------------------\n\ninterface Props extends BreadcrumbsProps {\n  action?: ReactNode;\n  heading: string;\n  moreLink?: string | string[];\n}\n\nexport default function HeaderBreadcrumbs({\n  links,\n  action,\n  heading,\n  moreLink = '' || [],\n  sx,\n  ...other\n}: Props) {\n  return (\n    <Box sx={{ mb: 5, ...sx }}>\n      <Box sx={{ display: 'flex', alignItems: 'center' }}>\n        <Box sx={{ flexGrow: 1 }}>\n          <Typography variant=\"h4\" gutterBottom>\n            {heading}\n          </Typography>\n          <Breadcrumbs links={links} {...other} />\n        </Box>\n\n        {action && <Box sx={{ flexShrink: 0 }}>{action}</Box>}\n      </Box>\n\n      <Box sx={{ mt: 2 }}>\n        {typeof moreLink === 'string' ? (\n          <Link href={moreLink} target=\"_blank\" rel=\"noopener\" variant=\"body2\">\n            {moreLink}\n          </Link>\n        ) : (\n          moreLink.map((href) => (\n            <Link\n              noWrap\n              key={href}\n              href={href}\n              variant=\"body2\"\n              target=\"_blank\"\n              rel=\"noopener\"\n              sx={{ display: 'table' }}\n            >\n              {href}\n            </Link>\n          ))\n        )}\n      </Box>\n    </Box>\n  );\n}\n","// Determine if the toggle button value matches, or is contained in, the\n// candidate group value.\nexport default function isValueSelected(value, candidate) {\n  if (candidate === undefined || value === undefined) {\n    return false;\n  }\n\n  if (Array.isArray(candidate)) {\n    return candidate.indexOf(value) >= 0;\n  }\n\n  return value === candidate;\n}","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getToggleButtonGroupUtilityClass(slot) {\n  return generateUtilityClass('MuiToggleButtonGroup', slot);\n}\nconst toggleButtonGroupClasses = generateUtilityClasses('MuiToggleButtonGroup', ['root', 'selected', 'vertical', 'disabled', 'grouped', 'groupedHorizontal', 'groupedVertical']);\nexport default toggleButtonGroupClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"children\", \"className\", \"color\", \"disabled\", \"exclusive\", \"fullWidth\", \"onChange\", \"orientation\", \"size\", \"value\"];\nimport * as React from 'react';\nimport { isFragment } from 'react-is';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport capitalize from '../utils/capitalize';\nimport isValueSelected from './isValueSelected';\nimport toggleButtonGroupClasses, { getToggleButtonGroupUtilityClass } from './toggleButtonGroupClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    orientation,\n    fullWidth,\n    disabled\n  } = ownerState;\n  const slots = {\n    root: ['root', orientation === 'vertical' && 'vertical', fullWidth && 'fullWidth'],\n    grouped: ['grouped', `grouped${capitalize(orientation)}`, disabled && 'disabled']\n  };\n  return composeClasses(slots, getToggleButtonGroupUtilityClass, classes);\n};\n\nconst ToggleButtonGroupRoot = styled('div', {\n  name: 'MuiToggleButtonGroup',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [{\n      [`& .${toggleButtonGroupClasses.grouped}`]: styles.grouped\n    }, {\n      [`& .${toggleButtonGroupClasses.grouped}`]: styles[`grouped${capitalize(ownerState.orientation)}`]\n    }, styles.root, ownerState.orientation === 'vertical' && styles.vertical, ownerState.fullWidth && styles.fullWidth];\n  }\n})(({\n  ownerState,\n  theme\n}) => _extends({\n  display: 'inline-flex',\n  borderRadius: (theme.vars || theme).shape.borderRadius\n}, ownerState.orientation === 'vertical' && {\n  flexDirection: 'column'\n}, ownerState.fullWidth && {\n  width: '100%'\n}, {\n  [`& .${toggleButtonGroupClasses.grouped}`]: _extends({}, ownerState.orientation === 'horizontal' ? {\n    '&:not(:first-of-type)': {\n      marginLeft: -1,\n      borderLeft: '1px solid transparent',\n      borderTopLeftRadius: 0,\n      borderBottomLeftRadius: 0\n    },\n    '&:not(:last-of-type)': {\n      borderTopRightRadius: 0,\n      borderBottomRightRadius: 0\n    },\n    [`&.${toggleButtonGroupClasses.selected} + .${toggleButtonGroupClasses.grouped}.${toggleButtonGroupClasses.selected}`]: {\n      borderLeft: 0,\n      marginLeft: 0\n    }\n  } : {\n    '&:not(:first-of-type)': {\n      marginTop: -1,\n      borderTop: '1px solid transparent',\n      borderTopLeftRadius: 0,\n      borderTopRightRadius: 0\n    },\n    '&:not(:last-of-type)': {\n      borderBottomLeftRadius: 0,\n      borderBottomRightRadius: 0\n    },\n    [`&.${toggleButtonGroupClasses.selected} + .${toggleButtonGroupClasses.grouped}.${toggleButtonGroupClasses.selected}`]: {\n      borderTop: 0,\n      marginTop: 0\n    }\n  })\n}));\nconst ToggleButtonGroup = /*#__PURE__*/React.forwardRef(function ToggleButtonGroup(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiToggleButtonGroup'\n  });\n\n  const {\n    children,\n    className,\n    color = 'standard',\n    disabled = false,\n    exclusive = false,\n    fullWidth = false,\n    onChange,\n    orientation = 'horizontal',\n    size = 'medium',\n    value\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    disabled,\n    fullWidth,\n    orientation,\n    size\n  });\n\n  const classes = useUtilityClasses(ownerState);\n\n  const handleChange = (event, buttonValue) => {\n    if (!onChange) {\n      return;\n    }\n\n    const index = value && value.indexOf(buttonValue);\n    let newValue;\n\n    if (value && index >= 0) {\n      newValue = value.slice();\n      newValue.splice(index, 1);\n    } else {\n      newValue = value ? value.concat(buttonValue) : [buttonValue];\n    }\n\n    onChange(event, newValue);\n  };\n\n  const handleExclusiveChange = (event, buttonValue) => {\n    if (!onChange) {\n      return;\n    }\n\n    onChange(event, value === buttonValue ? null : buttonValue);\n  };\n\n  return /*#__PURE__*/_jsx(ToggleButtonGroupRoot, _extends({\n    role: \"group\",\n    className: clsx(classes.root, className),\n    ref: ref,\n    ownerState: ownerState\n  }, other, {\n    children: React.Children.map(children, child => {\n      if (! /*#__PURE__*/React.isValidElement(child)) {\n        return null;\n      }\n\n      if (process.env.NODE_ENV !== 'production') {\n        if (isFragment(child)) {\n          console.error([\"MUI: The ToggleButtonGroup component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n'));\n        }\n      }\n\n      return /*#__PURE__*/React.cloneElement(child, {\n        className: clsx(classes.grouped, child.props.className),\n        onChange: exclusive ? handleExclusiveChange : handleChange,\n        selected: child.props.selected === undefined ? isValueSelected(child.props.value, value) : child.props.selected,\n        size: child.props.size || size,\n        fullWidth,\n        color: child.props.color || color,\n        disabled: child.props.disabled || disabled\n      });\n    })\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? ToggleButtonGroup.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the button when it is selected.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#adding-new-colors).\n   * @default 'standard'\n   */\n  color: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['standard', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n\n  /**\n   * If `true`, the component is disabled. This implies that all ToggleButton children will be disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, only allow one of the child ToggleButton values to be selected.\n   * @default false\n   */\n  exclusive: PropTypes.bool,\n\n  /**\n   * If `true`, the button group will take up the full width of its container.\n   * @default false\n   */\n  fullWidth: PropTypes.bool,\n\n  /**\n   * Callback fired when the value changes.\n   *\n   * @param {React.MouseEvent<HTMLElement>} event The event source of the callback.\n   * @param {any} value of the selected buttons. When `exclusive` is true\n   * this is a single value; when false an array of selected values. If no value\n   * is selected and `exclusive` is true the value is null; when false an empty array.\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * The component orientation (layout flow direction).\n   * @default 'horizontal'\n   */\n  orientation: PropTypes.oneOf(['horizontal', 'vertical']),\n\n  /**\n   * The size of the component.\n   * @default 'medium'\n   */\n  size: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['small', 'medium', 'large']), PropTypes.string]),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * The currently selected value within the group or an array of selected\n   * values when `exclusive` is false.\n   *\n   * The value must have reference equality with the option in order to be selected.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default ToggleButtonGroup;","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getToggleButtonUtilityClass(slot) {\n  return generateUtilityClass('MuiToggleButton', slot);\n}\nconst toggleButtonClasses = generateUtilityClasses('MuiToggleButton', ['root', 'disabled', 'selected', 'standard', 'primary', 'secondary', 'sizeSmall', 'sizeMedium', 'sizeLarge']);\nexport default toggleButtonClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"children\", \"className\", \"color\", \"disabled\", \"disableFocusRipple\", \"fullWidth\", \"onChange\", \"onClick\", \"selected\", \"size\", \"value\"];\n// @inheritedComponent ButtonBase\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { alpha } from '../styles';\nimport ButtonBase from '../ButtonBase';\nimport capitalize from '../utils/capitalize';\nimport useThemeProps from '../styles/useThemeProps';\nimport styled from '../styles/styled';\nimport toggleButtonClasses, { getToggleButtonUtilityClass } from './toggleButtonClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    fullWidth,\n    selected,\n    disabled,\n    size,\n    color\n  } = ownerState;\n  const slots = {\n    root: ['root', selected && 'selected', disabled && 'disabled', fullWidth && 'fullWidth', `size${capitalize(size)}`, color]\n  };\n  return composeClasses(slots, getToggleButtonUtilityClass, classes);\n};\n\nconst ToggleButtonRoot = styled(ButtonBase, {\n  name: 'MuiToggleButton',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[`size${capitalize(ownerState.size)}`]];\n  }\n})(({\n  theme,\n  ownerState\n}) => {\n  let selectedColor = ownerState.color === 'standard' ? theme.palette.text.primary : theme.palette[ownerState.color].main;\n  let selectedColorChannel;\n\n  if (theme.vars) {\n    selectedColor = ownerState.color === 'standard' ? theme.vars.palette.text.primary : theme.vars.palette[ownerState.color].main;\n    selectedColorChannel = ownerState.color === 'standard' ? theme.vars.palette.text.primaryChannel : theme.vars.palette[ownerState.color].mainChannel;\n  }\n\n  return _extends({}, theme.typography.button, {\n    borderRadius: (theme.vars || theme).shape.borderRadius,\n    padding: 11,\n    border: `1px solid ${(theme.vars || theme).palette.divider}`,\n    color: (theme.vars || theme).palette.action.active\n  }, ownerState.fullWidth && {\n    width: '100%'\n  }, {\n    [`&.${toggleButtonClasses.disabled}`]: {\n      color: (theme.vars || theme).palette.action.disabled,\n      border: `1px solid ${(theme.vars || theme).palette.action.disabledBackground}`\n    },\n    '&:hover': {\n      textDecoration: 'none',\n      // Reset on mouse devices\n      backgroundColor: theme.vars ? `rgba(${theme.vars.palette.text.primaryChannel} / ${theme.vars.palette.action.hoverOpacity})` : alpha(theme.palette.text.primary, theme.palette.action.hoverOpacity),\n      '@media (hover: none)': {\n        backgroundColor: 'transparent'\n      }\n    },\n    [`&.${toggleButtonClasses.selected}`]: {\n      color: selectedColor,\n      backgroundColor: theme.vars ? `rgba(${selectedColorChannel} / ${theme.vars.palette.action.selectedOpacity})` : alpha(selectedColor, theme.palette.action.selectedOpacity),\n      '&:hover': {\n        backgroundColor: theme.vars ? `rgba(${selectedColorChannel} / calc(${theme.vars.palette.action.selectedOpacity} + ${theme.vars.palette.action.hoverOpacity}))` : alpha(selectedColor, theme.palette.action.selectedOpacity + theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: theme.vars ? `rgba(${selectedColorChannel} / ${theme.vars.palette.action.selectedOpacity})` : alpha(selectedColor, theme.palette.action.selectedOpacity)\n        }\n      }\n    }\n  }, ownerState.size === 'small' && {\n    padding: 7,\n    fontSize: theme.typography.pxToRem(13)\n  }, ownerState.size === 'large' && {\n    padding: 15,\n    fontSize: theme.typography.pxToRem(15)\n  });\n});\nconst ToggleButton = /*#__PURE__*/React.forwardRef(function ToggleButton(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiToggleButton'\n  });\n\n  const {\n    children,\n    className,\n    color = 'standard',\n    disabled = false,\n    disableFocusRipple = false,\n    fullWidth = false,\n    onChange,\n    onClick,\n    selected,\n    size = 'medium',\n    value\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    color,\n    disabled,\n    disableFocusRipple,\n    fullWidth,\n    size\n  });\n\n  const classes = useUtilityClasses(ownerState);\n\n  const handleChange = event => {\n    if (onClick) {\n      onClick(event, value);\n\n      if (event.defaultPrevented) {\n        return;\n      }\n    }\n\n    if (onChange) {\n      onChange(event, value);\n    }\n  };\n\n  return /*#__PURE__*/_jsx(ToggleButtonRoot, _extends({\n    className: clsx(classes.root, className),\n    disabled: disabled,\n    focusRipple: !disableFocusRipple,\n    ref: ref,\n    onClick: handleChange,\n    onChange: onChange,\n    value: value,\n    ownerState: ownerState,\n    \"aria-pressed\": selected\n  }, other, {\n    children: children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? ToggleButton.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the button when it is in an active state.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#adding-new-colors).\n   * @default 'standard'\n   */\n  color: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['standard', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the  keyboard focus ripple is disabled.\n   * @default false\n   */\n  disableFocusRipple: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect is disabled.\n   *\n   * ⚠️ Without a ripple there is no styling for :focus-visible by default. Be sure\n   * to highlight the element by applying separate styles with the `.Mui-focusVisible` class.\n   * @default false\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * If `true`, the button will take up the full width of its container.\n   * @default false\n   */\n  fullWidth: PropTypes.bool,\n\n  /**\n   * Callback fired when the state changes.\n   *\n   * @param {React.MouseEvent<HTMLElement>} event The event source of the callback.\n   * @param {any} value of the selected button.\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * Callback fired when the button is clicked.\n   *\n   * @param {React.MouseEvent<HTMLElement>} event The event source of the callback.\n   * @param {any} value of the selected button.\n   */\n  onClick: PropTypes.func,\n\n  /**\n   * If `true`, the button is rendered in an active state.\n   */\n  selected: PropTypes.bool,\n\n  /**\n   * The size of the component.\n   * The prop defaults to the value inherited from the parent ToggleButtonGroup component.\n   * @default 'medium'\n   */\n  size: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['small', 'medium', 'large']), PropTypes.string]),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * The value to associate with the button when selected in a\n   * ToggleButtonGroup.\n   */\n  value: PropTypes.any.isRequired\n} : void 0;\nexport default ToggleButton;","import { useState } from 'react';\n// @mui\nimport {\n  Box,\n  Card,\n  Container,\n  Typography,\n  CardHeader,\n  ToggleButton,\n  ToggleButtonGroup,\n} from '@mui/material';\n// hooks\nimport useSettings from '../../hooks/useSettings';\n// routes\nimport { PATH_DASHBOARD } from '../../routes/paths';\n// components\nimport Page from '../../components/Page';\nimport HeaderBreadcrumbs from '../../components/HeaderBreadcrumbs';\n// guards\nimport RoleBasedGuard from '../../guards/RoleBasedGuard';\n\n// ----------------------------------------------------------------------\n\nexport default function PermissionDenied() {\n  const { themeStretch } = useSettings();\n\n  const [role, setRole] = useState('admin');\n\n  const handleChangeRole = (event: React.MouseEvent<HTMLElement>, newRole: string | null) => {\n    if (newRole !== null) {\n      setRole(newRole);\n    }\n  };\n\n  return (\n    <Page title=\"Permission Denied\">\n      <Container maxWidth={themeStretch ? false : 'lg'}>\n        <HeaderBreadcrumbs\n          heading=\"Permission Denied\"\n          links={[\n            {\n              name: 'Dashboard',\n              href: PATH_DASHBOARD.root,\n            },\n            { name: 'Permission Denied' },\n          ]}\n        />\n\n        <ToggleButtonGroup\n          exclusive\n          value={role}\n          onChange={handleChangeRole}\n          color=\"primary\"\n          sx={{ mb: 5 }}\n        >\n          <ToggleButton value=\"admin\" aria-label=\"admin role\">\n            isAdmin\n          </ToggleButton>\n\n          <ToggleButton value=\"user\" aria-label=\"user role\">\n            isUser\n          </ToggleButton>\n        </ToggleButtonGroup>\n\n        {/* <RoleBasedGuard hasContent roles={[role]}>\n          <Box\n            sx={{\n              display: 'grid',\n              gap: 3,\n              gridTemplateColumns: 'repeat(2, 1fr)',\n            }}\n          >\n            {[...Array(8)].map((_, index) => (\n              <Card key={index}>\n                <CardHeader title={`Card ${index + 1}`} subheader=\"Proin viverra ligula\" />\n\n                <Typography sx={{ p: 3, color: 'text.secondary' }}>\n                  Aliquam lorem ante, dapibus in, viverra quis, feugiat a, tellus. In enim justo,\n                  rhoncus ut, imperdiet a, venenatis vitae, justo. Vestibulum fringilla pede sit\n                  amet augue.\n                </Typography>\n              </Card>\n            ))}\n          </Box>\n        </RoleBasedGuard> */}\n      </Container>\n    </Page>\n  );\n}\n","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M6 10c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm12 0c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm-6 0c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\"\n}), 'MoreHoriz');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { emphasize } from '@mui/system';\nimport styled from '../styles/styled';\nimport MoreHorizIcon from '../internal/svg-icons/MoreHoriz';\nimport ButtonBase from '../ButtonBase';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst BreadcrumbCollapsedButton = styled(ButtonBase)(({\n  theme\n}) => _extends({\n  display: 'flex',\n  marginLeft: `calc(${theme.spacing(1)} * 0.5)`,\n  marginRight: `calc(${theme.spacing(1)} * 0.5)`\n}, theme.palette.mode === 'light' ? {\n  backgroundColor: theme.palette.grey[100],\n  color: theme.palette.grey[700]\n} : {\n  backgroundColor: theme.palette.grey[700],\n  color: theme.palette.grey[100]\n}, {\n  borderRadius: 2,\n  '&:hover, &:focus': _extends({}, theme.palette.mode === 'light' ? {\n    backgroundColor: theme.palette.grey[200]\n  } : {\n    backgroundColor: theme.palette.grey[600]\n  }),\n  '&:active': _extends({\n    boxShadow: theme.shadows[0]\n  }, theme.palette.mode === 'light' ? {\n    backgroundColor: emphasize(theme.palette.grey[200], 0.12)\n  } : {\n    backgroundColor: emphasize(theme.palette.grey[600], 0.12)\n  })\n}));\nconst BreadcrumbCollapsedIcon = styled(MoreHorizIcon)({\n  width: 24,\n  height: 16\n});\n/**\n * @ignore - internal component.\n */\n\nfunction BreadcrumbCollapsed(props) {\n  const ownerState = props;\n  return /*#__PURE__*/_jsx(\"li\", {\n    children: /*#__PURE__*/_jsx(BreadcrumbCollapsedButton, _extends({\n      focusRipple: true\n    }, props, {\n      ownerState: ownerState,\n      children: /*#__PURE__*/_jsx(BreadcrumbCollapsedIcon, {\n        ownerState: ownerState\n      })\n    }))\n  });\n}\n\nprocess.env.NODE_ENV !== \"production\" ? BreadcrumbCollapsed.propTypes = {\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object\n} : void 0;\nexport default BreadcrumbCollapsed;","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getBreadcrumbsUtilityClass(slot) {\n  return generateUtilityClass('MuiBreadcrumbs', slot);\n}\nconst breadcrumbsClasses = generateUtilityClasses('MuiBreadcrumbs', ['root', 'ol', 'li', 'separator']);\nexport default breadcrumbsClasses;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"children\", \"className\", \"component\", \"expandText\", \"itemsAfterCollapse\", \"itemsBeforeCollapse\", \"maxItems\", \"separator\"];\nimport * as React from 'react';\nimport { isFragment } from 'react-is';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { integerPropType } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport Typography from '../Typography';\nimport BreadcrumbCollapsed from './BreadcrumbCollapsed';\nimport breadcrumbsClasses, { getBreadcrumbsUtilityClass } from './breadcrumbsClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root'],\n    li: ['li'],\n    ol: ['ol'],\n    separator: ['separator']\n  };\n  return composeClasses(slots, getBreadcrumbsUtilityClass, classes);\n};\n\nconst BreadcrumbsRoot = styled(Typography, {\n  name: 'MuiBreadcrumbs',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    return [{\n      [`& .${breadcrumbsClasses.li}`]: styles.li\n    }, styles.root];\n  }\n})({});\nconst BreadcrumbsOl = styled('ol', {\n  name: 'MuiBreadcrumbs',\n  slot: 'Ol',\n  overridesResolver: (props, styles) => styles.ol\n})({\n  display: 'flex',\n  flexWrap: 'wrap',\n  alignItems: 'center',\n  padding: 0,\n  margin: 0,\n  listStyle: 'none'\n});\nconst BreadcrumbsSeparator = styled('li', {\n  name: 'MuiBreadcrumbs',\n  slot: 'Separator',\n  overridesResolver: (props, styles) => styles.separator\n})({\n  display: 'flex',\n  userSelect: 'none',\n  marginLeft: 8,\n  marginRight: 8\n});\n\nfunction insertSeparators(items, className, separator, ownerState) {\n  return items.reduce((acc, current, index) => {\n    if (index < items.length - 1) {\n      acc = acc.concat(current, /*#__PURE__*/_jsx(BreadcrumbsSeparator, {\n        \"aria-hidden\": true,\n        className: className,\n        ownerState: ownerState,\n        children: separator\n      }, `separator-${index}`));\n    } else {\n      acc.push(current);\n    }\n\n    return acc;\n  }, []);\n}\n\nconst Breadcrumbs = /*#__PURE__*/React.forwardRef(function Breadcrumbs(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiBreadcrumbs'\n  });\n\n  const {\n    children,\n    className,\n    component = 'nav',\n    expandText = 'Show path',\n    itemsAfterCollapse = 1,\n    itemsBeforeCollapse = 1,\n    maxItems = 8,\n    separator = '/'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const [expanded, setExpanded] = React.useState(false);\n\n  const ownerState = _extends({}, props, {\n    component,\n    expanded,\n    expandText,\n    itemsAfterCollapse,\n    itemsBeforeCollapse,\n    maxItems,\n    separator\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  const listRef = React.useRef(null);\n\n  const renderItemsBeforeAndAfter = allItems => {\n    const handleClickExpand = () => {\n      setExpanded(true); // The clicked element received the focus but gets removed from the DOM.\n      // Let's keep the focus in the component after expanding.\n      // Moving it to the <ol> or <nav> does not cause any announcement in NVDA.\n      // By moving it to some link/button at least we have some announcement.\n\n      const focusable = listRef.current.querySelector('a[href],button,[tabindex]');\n\n      if (focusable) {\n        focusable.focus();\n      }\n    }; // This defends against someone passing weird input, to ensure that if all\n    // items would be shown anyway, we just show all items without the EllipsisItem\n\n\n    if (itemsBeforeCollapse + itemsAfterCollapse >= allItems.length) {\n      if (process.env.NODE_ENV !== 'production') {\n        console.error(['MUI: You have provided an invalid combination of props to the Breadcrumbs.', `itemsAfterCollapse={${itemsAfterCollapse}} + itemsBeforeCollapse={${itemsBeforeCollapse}} >= maxItems={${maxItems}}`].join('\\n'));\n      }\n\n      return allItems;\n    }\n\n    return [...allItems.slice(0, itemsBeforeCollapse), /*#__PURE__*/_jsx(BreadcrumbCollapsed, {\n      \"aria-label\": expandText,\n      onClick: handleClickExpand\n    }, \"ellipsis\"), ...allItems.slice(allItems.length - itemsAfterCollapse, allItems.length)];\n  };\n\n  const allItems = React.Children.toArray(children).filter(child => {\n    if (process.env.NODE_ENV !== 'production') {\n      if (isFragment(child)) {\n        console.error([\"MUI: The Breadcrumbs component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n'));\n      }\n    }\n\n    return /*#__PURE__*/React.isValidElement(child);\n  }).map((child, index) => /*#__PURE__*/_jsx(\"li\", {\n    className: classes.li,\n    children: child\n  }, `child-${index}`));\n  return /*#__PURE__*/_jsx(BreadcrumbsRoot, _extends({\n    ref: ref,\n    component: component,\n    color: \"text.secondary\",\n    className: clsx(classes.root, className),\n    ownerState: ownerState\n  }, other, {\n    children: /*#__PURE__*/_jsx(BreadcrumbsOl, {\n      className: classes.ol,\n      ref: listRef,\n      ownerState: ownerState,\n      children: insertSeparators(expanded || maxItems && allItems.length <= maxItems ? allItems : renderItemsBeforeAndAfter(allItems), classes.separator, separator, ownerState)\n    })\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Breadcrumbs.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * Override the default label for the expand button.\n   *\n   * For localization purposes, you can use the provided [translations](/material-ui/guides/localization/).\n   * @default 'Show path'\n   */\n  expandText: PropTypes.string,\n\n  /**\n   * If max items is exceeded, the number of items to show after the ellipsis.\n   * @default 1\n   */\n  itemsAfterCollapse: integerPropType,\n\n  /**\n   * If max items is exceeded, the number of items to show before the ellipsis.\n   * @default 1\n   */\n  itemsBeforeCollapse: integerPropType,\n\n  /**\n   * Specifies the maximum number of breadcrumbs to display. When there are more\n   * than the maximum number, only the first `itemsBeforeCollapse` and last `itemsAfterCollapse`\n   * will be shown, with an ellipsis in between.\n   * @default 8\n   */\n  maxItems: integerPropType,\n\n  /**\n   * Custom separator node.\n   * @default '/'\n   */\n  separator: PropTypes.node,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Breadcrumbs;"],"names":["Breadcrumbs","links","activeLast","other","currentLink","length","name","listDefault","map","link","LinkItem","listActiveLast","Typography","variant","sx","maxWidth","overflow","whiteSpace","color","textOverflow","separator","Box","component","width","height","borderRadius","bgcolor","href","icon","Link","RouterLink","to","lineHeight","display","alignItems","mr","HeaderBreadcrumbs","action","heading","moreLink","mb","flexGrow","gutterBottom","flexShrink","mt","target","rel","noWrap","isValueSelected","value","candidate","undefined","Array","isArray","indexOf","getToggleButtonGroupUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","ToggleButtonGroupRoot","styled","overridesResolver","props","styles","ownerState","toggleButtonGroupClasses","grouped","capitalize","orientation","root","vertical","fullWidth","theme","_extends","vars","shape","flexDirection","marginLeft","borderLeft","borderTopLeftRadius","borderBottomLeftRadius","borderTopRightRadius","borderBottomRightRadius","marginTop","borderTop","React","inProps","ref","useThemeProps","children","className","disabled","exclusive","onChange","size","_objectWithoutPropertiesLoose","classes","slots","composeClasses","useUtilityClasses","handleChange","event","buttonValue","newValue","index","slice","splice","concat","handleExclusiveChange","_jsx","role","clsx","child","selected","getToggleButtonUtilityClass","ToggleButtonRoot","ButtonBase","selectedColorChannel","selectedColor","palette","text","primary","main","primaryChannel","mainChannel","typography","button","padding","border","divider","active","toggleButtonClasses","disabledBackground","textDecoration","backgroundColor","hoverOpacity","alpha","selectedOpacity","fontSize","pxToRem","disableFocusRipple","onClick","focusRipple","defaultPrevented","PermissionDenied","themeStretch","useSettings","useState","setRole","Page","title","Container","PATH_DASHBOARD","newRole","createSvgIcon","d","BreadcrumbCollapsedButton","spacing","marginRight","mode","grey","boxShadow","shadows","emphasize","BreadcrumbCollapsedIcon","MoreHorizIcon","getBreadcrumbsUtilityClass","BreadcrumbsRoot","breadcrumbsClasses","li","BreadcrumbsOl","ol","flexWrap","margin","listStyle","BreadcrumbsSeparator","userSelect","insertSeparators","items","reduce","acc","current","push","expandText","itemsAfterCollapse","itemsBeforeCollapse","maxItems","expanded","setExpanded","listRef","allItems","filter","BreadcrumbCollapsed","focusable","querySelector","focus","renderItemsBeforeAndAfter"],"sourceRoot":""}